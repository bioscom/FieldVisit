using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// Summary description for StoredProcedureContract
/// </summary>
public class StoredProcedureContract
{
    public StoredProcedureContract()
    {
        //
        // 
        //
    }


    #region *********************************1. PROD_PRIORITY Table CRUD

    public static string insertPriority()
    {
        string sql = "INSERT INTO PROD_PRIORITY (PRIORITY, IORDER) VALUES(:sPriority, :iOrder)";
        return sql;
    }

    public static string updatePriority()
    {
        string sql = "UPDATE PROD_PRIORITY SET PRIORITY = :sPriority, IORDER = :iOrder WHERE IDPRIORITY = :iPriorityId";
        return sql;
    }

    public static string getPrioritys()
    {
        string sql = "SELECT IDPRIORITY, PRIORITY FROM CONTRACT_PRIORITY";
        return sql;
    }

    public static string getPriority()
    {
        string sql = "SELECT IDPRIORITY, IDPRIORITY||'.   '|| PRIORITY AS PRIORITY FROM CONTRACT_PRIORITY WHERE ISECTION = '1' ORDER BY IDPRIORITY";
        return sql;
    }

    public static string getPriorityBySection()
    {
        string sql = "SELECT IDPRIORITY, IDPRIORITY||'.   '|| PRIORITY AS PRIORITY FROM CONTRACT_PRIORITY WHERE ISECTION = '2' ORDER BY IDPRIORITY";
        return sql;
    }

    public static string getPriorityById()
    {
        string sql = "SELECT IDPRIORITY, PRIORITY FROM CONTRACT_PRIORITY WHERE IDPRIORITY = :iPriorityId";
        return sql;
    }

    public static string getPriorityByPriority()
    {
        string sql = "SELECT IDPRIORITY, PRIORITY FROM CONTRACT_PRIORITY WHERE UPPPER(PRIORITY) = UPPPER(:sName)";
        return sql;
    }

    #endregion

    #region ******************************** 14Days Contract *******************************

    public static string get14DayContractByActivityId()
    {
        string sql = "SELECT IDFOURTEEN, IDACTIVITIES, TARGET, ACTUAL, YYEAR, TO_CHAR(TRIP_START, 'DD/MM/YYYY') AS TRIP_START, USERIDOPSSUP, USERIDOPSMGR, ";
        sql += "USERID, STATUS, TO_CHAR(DATE_RAISED, 'DD/MM/YYYY') AS DATE_RAISED FROM CONTRACT_FOURTEENDAY WHERE IDACTIVITIES= :iActivityId";

        return sql;
    }

    #endregion


    #region //****************************** Contract Activities ************************************

    public static string get14DayContract()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";
    
        return sql;
    }

    public static string get14DayContractByDistrict()
    {
        string sql = "SELECT DISTINCT PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_ASSET.ASSETS, CONTRACT_FOURTEENDAY.START_DATE, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME ";
        sql += "FROM PROD_ASSET ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_ASSET.IDASSET = PROD_DISTRICT.IDASSET ";
        sql += "INNER JOIN CONTRACT_FOURTEENDAY ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ";
        sql += "WHERE PROD_DISTRICT.ID_DISTRICT = :iDistrictId ORDER BY CONTRACT_FOURTEENDAY.START_DATE DESC";

        return sql;
    }

    public static string get14DayContracts()
    {
        string sql = "SELECT DISTINCT PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_ASSET.ASSETS, CONTRACT_FOURTEENDAY.START_DATE, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME ";
        sql += "FROM PROD_ASSET ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_ASSET.IDASSET = PROD_DISTRICT.IDASSET ";
        sql += "INNER JOIN CONTRACT_FOURTEENDAY ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ORDER BY CONTRACT_FOURTEENDAY.START_DATE DESC";

        return sql;
    }

    public static string get14DayContractByDistrictStartDate()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, CONTRACT_FOURTEENDAY.IDFOURTEEN, CONTRACT_FOURTEENDAY.TARGET, CONTRACT_FOURTEENDAY.DAY1, ";
        sql += "CONTRACT_FOURTEENDAY.DAY2, CONTRACT_FOURTEENDAY.DAY3, CONTRACT_FOURTEENDAY.DAY4, CONTRACT_FOURTEENDAY.DAY5, CONTRACT_FOURTEENDAY.DAY6, ";
        sql += "CONTRACT_FOURTEENDAY.DAY7, CONTRACT_FOURTEENDAY.DAY8, CONTRACT_FOURTEENDAY.DAY9, CONTRACT_FOURTEENDAY.DAY10, CONTRACT_FOURTEENDAY.DAY11, ";
        sql += "CONTRACT_FOURTEENDAY.DAY12, CONTRACT_FOURTEENDAY.DAY13, CONTRACT_FOURTEENDAY.DAY14, CONTRACT_FOURTEENDAY.START_DATE, ";
        sql += "PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME  ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "LEFT OUTER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "LEFT OUTER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "LEFT OUTER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ";
        sql += "WHERE CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate AND PROD_DISTRICT.ID_DISTRICT = :iDistrictId ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string get14DayContractByDistrictStartDate2()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, CONTRACT_FOURTEENDAY.IDFOURTEEN, CONTRACT_FOURTEENDAY.TARGET, CONTRACT_FOURTEENDAY.ACTUAL, ";       
        sql += "CONTRACT_FOURTEENDAY.START_DATE, PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME  ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "LEFT OUTER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "LEFT OUTER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "LEFT OUTER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ";
        sql += "WHERE CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate AND PROD_DISTRICT.ID_DISTRICT = :iDistrictId ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string get14DayContractByTripStartDateActivityId()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, CONTRACT_FOURTEENDAY.IDFOURTEEN, CONTRACT_FOURTEENDAY.TARGET, CONTRACT_FOURTEENDAY.DAY1, ";
        sql += "CONTRACT_FOURTEENDAY.DAY2, CONTRACT_FOURTEENDAY.DAY3, CONTRACT_FOURTEENDAY.DAY4, CONTRACT_FOURTEENDAY.DAY5, CONTRACT_FOURTEENDAY.DAY6, ";
        sql += "CONTRACT_FOURTEENDAY.DAY7, CONTRACT_FOURTEENDAY.DAY8, CONTRACT_FOURTEENDAY.DAY9, CONTRACT_FOURTEENDAY.DAY10, CONTRACT_FOURTEENDAY.DAY11, ";
        sql += "CONTRACT_FOURTEENDAY.DAY12, CONTRACT_FOURTEENDAY.DAY13, CONTRACT_FOURTEENDAY.DAY14, CONTRACT_FOURTEENDAY.START_DATE, ";
        sql += "PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME  ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "LEFT OUTER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "LEFT OUTER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "LEFT OUTER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ";
        sql += "WHERE CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate AND CONTRACT_ACTIVITIES.IDSUBACTIVITIES = :iActivityId ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string getGetContractActivitiesRecordedByID()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, CONTRACT_FOURTEENDAY.IDFOURTEEN, CONTRACT_FOURTEENDAY.TARGET, CONTRACT_FOURTEENDAY.DAY1, ";
        sql += "CONTRACT_FOURTEENDAY.DAY2, CONTRACT_FOURTEENDAY.DAY3, CONTRACT_FOURTEENDAY.DAY4, CONTRACT_FOURTEENDAY.DAY5, CONTRACT_FOURTEENDAY.DAY6, ";
        sql += "CONTRACT_FOURTEENDAY.DAY7, CONTRACT_FOURTEENDAY.DAY8, CONTRACT_FOURTEENDAY.DAY9, CONTRACT_FOURTEENDAY.DAY10, CONTRACT_FOURTEENDAY.DAY11, ";
        sql += "CONTRACT_FOURTEENDAY.DAY12, CONTRACT_FOURTEENDAY.DAY13, CONTRACT_FOURTEENDAY.DAY14, CONTRACT_FOURTEENDAY.START_DATE, ";
        sql += "PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME  ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "LEFT OUTER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "LEFT OUTER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = CONTRACT_FOURTEENDAY.ID_DISTRICT ";
        sql += "LEFT OUTER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = CONTRACT_FOURTEENDAY.USERID ";
        sql += "WHERE CONTRACT_FOURTEENDAY.IDFOURTEEN = :lFourteenId";

        return sql;
    }

    public static string Insert14DayContract()
    {
        string sql = "INSERT INTO CONTRACT_FOURTEENDAY (ID_DISTRICT, TARGET, DAY1, DAY2, DAY3, DAY4, DAY5, DAY6, DAY7, DAY8, DAY9, DAY10, ";
        sql += "DAY11, DAY12, DAY13, DAY14, START_DATE, USERID, IDACTIVITIES) VALUES (:iDistrictId, :dTarget, :dDay1, :dDay2, :dDay3, :dDay4, ";
        sql += ":dDay5, :dDay6, :dDay7, :dDay8, :dDay9, :dDay10, :dDay11, :dDay12, :dDay13, :dDay14, :dtTripStartDate, :iUserId, :iActivityId)";

        return sql;
    }

    public static string Insert14DayContract2()
    {
        string sql = "INSERT INTO CONTRACT_FOURTEENDAY (ID_DISTRICT, TARGET, ACTUAL, START_DATE, USERID, IDACTIVITIES) VALUES (:iDistrictId, :dTarget, :dActual, :dtTripStartDate, :iUserId, :iActivityId)";

        return sql;
    }

    public static string Update14DayContract()
    {
        string sql = "UPDATE CONTRACT_FOURTEENDAY SET ID_DISTRICT = :iDistrictId, TARGET = :dTarget, DAY1 = :dDay1, DAY2 = :dDay2, DAY3 = :dDay3, DAY4 = :dDay4, ";
        sql += "DAY5 = :dDay5, DAY6 = :dDay6, DAY7 = :dDay7, DAY8 = :dDay8, DAY9 = :dDay9, DAY10 = :dDay10, DAY11 = :dDay11, DAY12 = :dDay12, ";
        sql += "DAY13 = :dDay13, DAY14 = :dDay14, START_DATE = :dtTripStartDate, USERID = :iUserId, IDACTIVITIES = :iActivityId ";
        sql += "WHERE IDFOURTEEN = :lFourteenDayId";

        return sql;
    }

    public static string Update14DayContract2()
    {
        //string sql = "UPDATE CONTRACT_FOURTEENDAY SET TARGET = :dTarget, ACTUAL = :dActual WHERE IDFOURTEEN = :lFourteenDayId";
        string sql = "UPDATE CONTRACT_FOURTEENDAY SET TARGET = :dTarget, ACTUAL = :dActual WHERE IDACTIVITIES = :iActivityId AND ID_DISTRICT = :iDistrictId AND START_DATE = :dtTripStartDate";

        return sql;
    }

    #endregion

    public static string getActitiesByPriority()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.IDSUBACTIVITIES, CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, ";
        sql += "CONTRACT_ACTIVITIES.IBIT, CONTRACT_ACTIVITIES.IBITCALC, CONTRACT_ACTIVITIES.MEASURES, CONTRACT_ACTIVITIES.TARGET ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "WHERE CONTRACT_PRIORITY.IDPRIORITY = :iPriorityId ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string getActitiesByPriority2()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, CONTRACT_ACTIVITIES.IBIT, CONTRACT_ACTIVITIES.IBITCALC, CONTRACT_ACTIVITIES.MEASURES ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "WHERE CONTRACT_PRIORITY.IDPRIORITY = :iPriorityId AND (CONTRACT_ACTIVITIES.IBIT = :iBit) ";
        sql += "AND (CONTRACT_PRIORITY.ISECTION = '1') ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string getActitiesByActivityId()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.IDSUBACTIVITIES, CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, ";
        sql += "CONTRACT_ACTIVITIES.IBIT, CONTRACT_ACTIVITIES.IBITCALC, CONTRACT_ACTIVITIES.MEASURES, CONTRACT_ACTIVITIES.TARGET ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "WHERE CONTRACT_ACTIVITIES.IDACTIVITIES = :iActivityId";

        return sql;
    }

    public static string getActitiesByPriorityTripStartDate()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, ";
        sql += "CONTRACT_ACTIVITIES.IDACTIVITIES, CONTRACT_ACTIVITIES.IDSUBACTIVITIES, CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, ";
        sql += "CONTRACT_ACTIVITIES.IBIT, CONTRACT_ACTIVITIES.MEASURES, CONTRACT_FOURTEENDAY.TARGET, ";
        sql += "(CONTRACT_FOURTEENDAY.DAY1 + CONTRACT_FOURTEENDAY.DAY2 + CONTRACT_FOURTEENDAY.DAY3 + CONTRACT_FOURTEENDAY.DAY4 + ";
        sql += "CONTRACT_FOURTEENDAY.DAY5 + CONTRACT_FOURTEENDAY.DAY6 + CONTRACT_FOURTEENDAY.DAY7 + CONTRACT_FOURTEENDAY.DAY8 + ";
        sql += "CONTRACT_FOURTEENDAY.DAY9 + CONTRACT_FOURTEENDAY.DAY10 + CONTRACT_FOURTEENDAY.DAY11 + CONTRACT_FOURTEENDAY.DAY12 + ";
        sql += "CONTRACT_FOURTEENDAY.DAY13 + CONTRACT_FOURTEENDAY.DAY14) AS ACTUAL ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "INNER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "WHERE (CONTRACT_PRIORITY.IDPRIORITY = :iPriorityId) AND (CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate) AND (CONTRACT_FOURTEENDAY.ID_DISTRICT = :iDistrict) ";
        sql += "AND (CONTRACT_ACTIVITIES.IBIT = :iBit) AND (CONTRACT_PRIORITY.ISECTION = '1') ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string getActitiesByPriority2TripStartDate()
    {
        string sql = "SELECT CONTRACT_PRIORITY.IDPRIORITY, CONTRACT_PRIORITY.PRIORITY, CONTRACT_ACTIVITIES.IDACTIVITIES, ";
        sql += "CONTRACT_ACTIVITIES.IDSUBACTIVITIES, CONTRACT_ACTIVITIES.ACTIVITY, CONTRACT_ACTIVITIES.ISEQUENCE, ";
        sql += "CONTRACT_ACTIVITIES.IBIT, CONTRACT_ACTIVITIES.MEASURES, CONTRACT_FOURTEENDAY.TARGET, CONTRACT_FOURTEENDAY.ACTUAL ";
        sql += "FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "INNER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "WHERE (CONTRACT_PRIORITY.IDPRIORITY = :iPriorityId) AND (CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate) AND (CONTRACT_FOURTEENDAY.ID_DISTRICT = :iDistrict) ";
        sql += "AND (CONTRACT_ACTIVITIES.IBIT = :iBit) AND (CONTRACT_PRIORITY.ISECTION = '1') ORDER BY CONTRACT_ACTIVITIES.ISEQUENCE";

        return sql;
    }

    public static string getOpsSuperintendentByTripStartDate()
    {
        string sql = "SELECT DISTINCT CONTRACT_FOURTEENDAY.USERID FROM CONTRACT_ACTIVITIES ";
        sql += "INNER JOIN CONTRACT_PRIORITY ON CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_ACTIVITIES.IDPRIORITY ";
        sql += "INNER JOIN CONTRACT_FOURTEENDAY ON CONTRACT_ACTIVITIES.IDACTIVITIES = CONTRACT_FOURTEENDAY.IDACTIVITIES ";
        sql += "WHERE (CONTRACT_FOURTEENDAY.START_DATE = :dtTripStartDate) ";

        return sql;
    }

    public static string UpdateBit()
    {
        string sql = "UPDATE CONTRACT_ACTIVITIES SET IBIT = :iBit WHERE IDACTIVITIES = :iActivityId";
        return sql;
    }

    public static string UpdateBitCalc()
    {
        string sql = "UPDATE CONTRACT_ACTIVITIES SET IBITCALC = :iBitCalc WHERE IDACTIVITIES = :iActivityId";
        return sql;
    }

    #region //*************************** Lessons Learnt *************************

    public static string InsertLessonsLearnt()
    {
        string sql = "INSERT INTO CONTRACT_LESSONS (START_DATE, ID_DISTRICT, IDPRIORITY, USERID, CONSEQUENCES, WHAT, WHY) ";
        sql += "VALUES (:dtTripStartDate, :iDistrictId, :iPriorityId, :iUserId, :sConsequences, :sWhat, :sWhy)";
        return sql;
    }

    public static string UpdateLessonsLearnt()
    {
        string sql = "UPDATE CONTRACT_LESSONS SET START_DATE = :dtTripStartDate, ID_DISTRICT = :iDistrictId, IDPRIORITY = :iPriorityId, ";
        sql += "USERID = :iUserId, CONSEQUENCES = :sConsequences, WHAT = :sWhat, WHY = :sWhy  WHERE IDLESSONS = :lLessonId";
        return sql;
    }

    public static string DeleteLessonsLearnt()
    {
        string sql = "DELETE FROM CONTRACT_LESSONS WHERE IDLESSONS = :lLessonId";
        return sql;
    }

    public static string GetLessonsLearntByDistrictPriorityTripStartDate()
    {
        string sql = "SELECT IDLESSONS, START_DATE, ID_DISTRICT, IDPRIORITY, USERID, CONSEQUENCES, WHAT, WHY FROM CONTRACT_LESSONS ";
        sql += "WHERE (START_DATE = :dtTripStartDate) AND (ID_DISTRICT = :iDistrictId) AND (IDPRIORITY = :iPriorityId)";
        return sql;
    }

    public static string GetLeadershipActivityByDistrictTripStartDate()
    {
        string sql = "SELECT PROD_ASSET.IDASSET, PROD_ASSET.ASSETS, PROD_ASSET.LOCATION, PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, CONTRACT_LESSONS.IDLESSONS, ";
        sql += "CONTRACT_LESSONS.WHAT, CONTRACT_LESSONS.WHY, CONTRACT_LESSONS.CONSEQUENCES, CONTRACT_LESSONS.START_DATE, CONTRACT_PRIORITY.IDPRIORITY, ";
        sql += "CONTRACT_PRIORITY.IDPRIORITY ||'.  '|| CONTRACT_PRIORITY.PRIORITY AS PRIORITY, CONTRACT_PRIORITY.ISECTION, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL ";
        sql += "FROM CONTRACT_LESSONS, CONTRACT_PRIORITY, PROD_DISTRICT, PROD_USERMGT, PROD_ASSET ";
        sql += "WHERE CONTRACT_PRIORITY.IDPRIORITY = CONTRACT_LESSONS.IDPRIORITY AND PROD_DISTRICT.ID_DISTRICT = CONTRACT_LESSONS.ID_DISTRICT ";
        sql += "AND PROD_USERMGT.USERID = CONTRACT_LESSONS.USERID AND PROD_ASSET.IDASSET = PROD_DISTRICT.IDASSET ";
        sql += "AND (CONTRACT_LESSONS.START_DATE = :dtTripStartDate) AND (PROD_DISTRICT.ID_DISTRICT = :iDistrictId)";

        return sql;
    }

    #endregion

    public static string SendForApproval()
    {
        string sql = "INSERT INTO CONTRACT_APPROVAL (ID_DISTRICT, STARTDATE, DATE_RECEIVED) VALUES (:iDistrictId, :dtTripStartDate, :dDateReceived)";
        return sql;
    }

    public static string Approved()
    {
        string sql = "UPDATE CONTRACT_APPROVAL SET DATE_REVIEWED = :dtDateReviewed, STATUS = :iStatus, USERID = :iUserId, COMMENTS = :sComments ";
        sql += "WHERE (ID_DISTRICT = :iDistrictId AND STARTDATE = :dtTripStartDate)";
        return sql;
    }
}