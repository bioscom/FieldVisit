
/// <summary>
/// Summary description for StoredProcedure
/// </summary>

public static class StoredProcedureFlareWaiver
{
    static StoredProcedureFlareWaiver()
    {

    }


    #region  *********************************** Flare Waiver Requests *******************************************
    //TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE


    public static string getFlareWaiverRequestMaster()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.OILPROD, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.WORKORDER, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, SUBSTR(FLARE_REQUEST.REASON, 0,100) AS REASON, FLARE_REQUEST.END_TIME, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, ";
        sql += "FLARE_REQUEST.IDGMAPPROVAL, TO_CHAR(FLARE_REQUEST.DATE_APPROVED, 'DD-MM-YYYY')DATE_APPROVED, TO_CHAR(FLARE_REQUEST.NEW_END_DATE, 'DD-MM-YYYY')NEW_END_DATE, FLARE_REQUEST.STATUS, ";
        sql += "FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, FLARE_REQUEST.BPSTATUS, ";
        sql += "PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL ";
        sql += "FROM FLARE_REQUEST ";

        return sql;
    }

    public static string getFlareWaiverRequestsByStatus()
    {
        string sql = getFlareWaiverRequestMaster();
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        //sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_REQUEST.STATUS = :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }
    public static string getFlareWaiverRequestsByArea()
    {
        //string sql = getFlareWaiverRequestMaster();
        //sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        ////sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        //sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        //sql += "WHERE (FLARE_REQUEST.STATUS = :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";


        string sql = "SELECT DISTINCT FLARE_REQUEST.IDREQUEST, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.OILPROD, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.WORKORDER, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, SUBSTR(FLARE_REQUEST.REASON, 0, 200) AS REASON, FLARE_REQUEST.END_TIME, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY') DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY') START_DATE, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY') END_DATE, FLARE_REQUEST.IDGMAPPROVAL, TO_CHAR(FLARE_REQUEST.DATE_APPROVED, 'DD-MM-YYYY') DATE_APPROVED, ";
        sql += "TO_CHAR(FLARE_REQUEST.NEW_END_DATE, 'DD-MM-YYYY') NEW_END_DATE, FLARE_REQUEST.STATUS, FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, FLARE_REQUEST.BPSTATUS, ";
        sql += "PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL, FLARE_AREA.IDAREA, FLARE_AREA.AREA FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST_FACILITIES ON FLARE_REQUEST_FACILITIES.IDREQUEST = FLARE_REQUEST.IDREQUEST ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST_FACILITIES.IDFACILITY ";
        sql += "INNER JOIN FLARE_AREA ON FLARE_AREA.IDAREA = FLARE_FACILITIES.IDAREA ";
        sql += "WHERE FLARE_AREA.IDAREA = :iAreaId ORDER BY FLARE_REQUEST.REQUESTNO";

        return sql;
    }

    public static string getGetFlareWaiverRequestsNotSupportedOrApproved()
    {
        string sql = getFlareWaiverRequestMaster();
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        //sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_REQUEST.STATUS = :iStatus1) OR (FLARE_REQUEST.STATUS = :iStatus2) OR (FLARE_REQUEST.STATUS = :iStatus3) ";
        sql += "OR (FLARE_REQUEST.STATUS = :iStatus4) OR (FLARE_REQUEST.STATUS = :iStatus5) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getPendingFlareWaiverRequests()
    {
        string sql = getFlareWaiverRequestMaster();
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_REQUEST.STATUS <> :iStatus) AND (FLARE_REQUEST.STATUS <> :iStatus1) ";
        sql += "AND (FLARE_REQUEST.STATUS <> :iStatus2) AND (FLARE_REQUEST.STATUS <> :iStatus3) ";
        sql += "AND(FLARE_REQUEST.STATUS <> :iStatus4) AND (FLARE_REQUEST.STATUS <> :iStatus5) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getECAvailable()
    {
        string sql = "SELECT RMG.OP_PROD_SUB_UNIT_CODE AREA, RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear";

        return sql;
    }

    public static string getDataFromEC()
    {
        string sql = "SELECT RMG.OP_PROD_SUB_UNIT_CODE AREA, RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' AND UPPER(RVS.CODE) LIKE UPPER(:sFacilityCode) ";
        sql += "AND TO_CHAR(RMG.PRODUCTION_DAY, 'MM') = :iMonth AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear ORDER BY RVS.PRODUCTION_DAY ASC";

        return sql;
    }
    public static string getDailyDataFromEC()
    {
        string sql = "SELECT RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' AND UPPER(RVS.OP_FCTY_1_CODE) LIKE UPPER(:sFacilityCode) ";
        sql += "AND TO_CHAR(RMG.PRODUCTION_DAY, 'MM') = :iMonth AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear AND TO_CHAR(RMG.PRODUCTION_DAY, 'DD') = :iDay";

        return sql;
    }

    public static string getDailyDataFromEC2()
    {
        string sql = "SELECT RMG.OP_PROD_SUB_UNIT_CODE AREA, RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY AND RMG.OP_PROD_SUB_UNIT_CODE IN ('PEL1', 'PEL2', 'PES1', 'PES2', 'PWS1', 'PWS2') ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' ";
        sql += "AND TO_CHAR(RMG.PRODUCTION_DAY, 'MM') = :iMonth AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear AND TO_CHAR(RMG.PRODUCTION_DAY, 'DD') = :iDay ORDER BY RVS.OP_FCTY_1_CODE";

        return sql;
    }

    public static string getGasFlareYTDByFacility()
    {
        string sql = "SELECT RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' AND UPPER(RVS.OP_FCTY_1_CODE) LIKE UPPER(:sFacilityCode) ";
        sql += "AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear";

        return sql;
    }


    public static string getFlareWaiverRequestByFacilityCode()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, PROD_USERMGT.USERID, FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, FLARE_REQUEST.BPSTATUS, ";
        sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_REQUEST.WORKORDER, ";
        sql += "FLARE_REQUEST.IDGMAPPROVAL, FLARE_REQUEST.DATE_APPROVED, FLARE_REQUEST.NEW_END_DATE ";
        sql += "FROM FLARE_CATEGORY, FLARE_REQUEST, FLARE_FACILITIES, PROD_USERMGT ";
        sql += "WHERE (FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY) AND (FLARE_REQUEST.IDUSER = PROD_USERMGT.USERID) ";
        sql += "AND (UPPER(FLARE_FACILITIES.CODE) LIKE UPPER(:sFacilityCode)) ";
        sql += "AND TO_CHAR(FLARE_REQUEST.DATE_APPROVED, 'MM') = :iMonth AND TO_CHAR(FLARE_REQUEST.DATE_APPROVED, 'YYYY') = :iYear";

        return sql;
    }

    public static string getFromECFlareBeyond()
    {
        string sql = "SELECT RVS.OP_FCTY_1_CODE FacilityKey, RVS.PRODUCTION_DAY, RVS.CODE, RVS.STREAM_CATEGORY, ";
        sql += "RMG.GRS_VOL_GAS_SM3 AS SI, RMG.GRS_VOL_GAS_MSCF AS API, NVL(RMG.MEAS_QUALITY_IND,'M') AS MQI ";
        sql += "FROM RV_STREAM RVS, RV_STRM_DAY_STREAM_MEAS_GAS RMG  ";
        sql += "WHERE RVS.OBJECT_ID = RMG.OBJECT_ID AND RVS.PRODUCTION_DAY = RMG.PRODUCTION_DAY ";
        sql += "AND RVS.STREAM_CATEGORY = 'GAS_FLARE' ";
        sql += "AND TO_CHAR(RMG.PRODUCTION_DAY, 'MM') = :iMonth AND TO_CHAR(RMG.PRODUCTION_DAY, 'YYYY') = :iYear";

        return sql;
    }

    public static string getFlareTargetByYear()
    {
        string sql = "SELECT FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_TARGET.TARGETID, FLARE_TARGET.IDFACILITY, FLARE_TARGET.IYEAR, ";
        sql += "FLARE_TARGET.JAN, FLARE_TARGET.FEB, FLARE_TARGET.MAR, FLARE_TARGET.APR, FLARE_TARGET.MAY, FLARE_TARGET.JUN, FLARE_TARGET.JUL, ";
        sql += "FLARE_TARGET.AUG, FLARE_TARGET.SEP, FLARE_TARGET.OCT, FLARE_TARGET.NOV, FLARE_TARGET.DECB, FLARE_TARGET.YTD FROM FLARE_TARGET ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_TARGET.IDFACILITY = FLARE_FACILITIES.IDFACILITY WHERE FLARE_TARGET.IYEAR = :iYear";

        return sql;
    }

    public static string getFlareTargetByTargetId()
    {
        string sql = "SELECT FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_TARGET.TARGETID, FLARE_TARGET.IDFACILITY, FLARE_TARGET.IYEAR, ";
        sql += "FLARE_TARGET.JAN, FLARE_TARGET.FEB, FLARE_TARGET.MAR, FLARE_TARGET.APR, FLARE_TARGET.MAY, FLARE_TARGET.JUN, FLARE_TARGET.JUL, ";
        sql += "FLARE_TARGET.AUG, FLARE_TARGET.SEP, FLARE_TARGET.OCT, FLARE_TARGET.NOV, FLARE_TARGET.DECB, FLARE_TARGET.YTD FROM FLARE_TARGET ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_TARGET.IDFACILITY = FLARE_FACILITIES.IDFACILITY WHERE FLARE_TARGET.TARGETID = :lTargetId";

        return sql;
    }

    public static string getFlareTargetByFacilityId(string sMonth)
    {
        string sql = "SELECT FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_TARGET.TARGETID, FLARE_TARGET.IDFACILITY, ";
        sql += "FLARE_TARGET.IYEAR, FLARE_TARGET." + sMonth + " FROM FLARE_TARGET ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_TARGET.IDFACILITY = FLARE_FACILITIES.IDFACILITY ";
        sql += "WHERE FLARE_TARGET.IDFACILITY = :iFacilityId AND FLARE_TARGET.IYEAR = :iYear";

        return sql;
    }

    public static string getFlareAnnualTargetByFacilityId()
    {
        string sql = "SELECT FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_TARGET.TARGETID, FLARE_TARGET.IDFACILITY, FLARE_TARGET.IYEAR, ";
        sql += "FLARE_TARGET.JAN, FLARE_TARGET.FEB, FLARE_TARGET.MAR, FLARE_TARGET.APR, FLARE_TARGET.MAY, FLARE_TARGET.JUN, FLARE_TARGET.JUL, ";
        sql += "FLARE_TARGET.AUG, FLARE_TARGET.SEP, FLARE_TARGET.OCT, FLARE_TARGET.NOV, FLARE_TARGET.DECB, FLARE_TARGET.YTD FROM FLARE_TARGET ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_TARGET.IDFACILITY = FLARE_FACILITIES.IDFACILITY ";
        sql += "WHERE FLARE_TARGET.IDFACILITY = :iFacilityId AND FLARE_TARGET.IYEAR = :iYear";

        return sql;
    }

    public static string getFlareTargetByMonthYear(string sMonth)
    {
        if (sMonth == "DEC") sMonth = "DECB";
        string sql = "SELECT FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_TARGET.TARGETID, FLARE_TARGET.IDFACILITY, ";
        sql += "FLARE_TARGET.IYEAR, FLARE_TARGET." + sMonth + " AS MON, FLARE_REQUEST.START_DATE, FLARE_REQUEST.END_DATE, FLARE_REQUEST.DATE_APPROVED, ";
        sql += "FLARE_REQUEST.NEW_END_DATE, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.STATUS FROM FLARE_TARGET ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_TARGET.IDFACILITY = FLARE_FACILITIES.IDFACILITY ";
        sql += "INNER JOIN FLARE_REQUEST_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST_FACILITIES.IDFACILITY ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_REQUEST_FACILITIES.IDREQUEST ";
        sql += "WHERE FLARE_TARGET.IYEAR = :iYear AND FLARE_REQUEST.STATUS = :iStatus AND TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'YYYY') = :iYear2 ORDER BY FLARE_FACILITIES.CODE";

        return sql;
    }
    
    public static string getMyFlareWaiverPendingRequests()
    {
        string sql = getFlareWaiverRequestMaster();

        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (PROD_USERMGT.USERID = :iUserId) AND (FLARE_REQUEST.STATUS <> :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getMyFlareWaiverApprovedRequests()
    {
        string sql = getFlareWaiverRequestMaster();

        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (PROD_USERMGT.USERID = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getMyFlareWaiverNotApprovedRequests()
    {
        string sql = getFlareWaiverRequestMaster();
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (PROD_USERMGT.USERID = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getMyFlareWaiverRequestsNotSupportedOrApproved()
    {
        string sql = getFlareWaiverRequestMaster();

        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (PROD_USERMGT.USERID = :iUserId) AND ((FLARE_REQUEST.STATUS = :iStatus1) OR (FLARE_REQUEST.STATUS = :iStatus2) OR (FLARE_REQUEST.STATUS = :iStatus3) ";
        sql += "OR (FLARE_REQUEST.STATUS = :iStatus4) OR (FLARE_REQUEST.STATUS = :iStatus5)) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getMyFlareWaiverCancelledRequests()
    {
        string sql = getFlareWaiverRequestMaster();
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_USERMGT.USERID = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (PROD_USERMGT.USERID = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getFlaireApprovalMaster()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, INITIATOR.FULLNAME AS INITIATOR, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, SUBSTR(FLARE_REQUEST.REASON, 0,200) AS REASON, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, ";
        sql += "FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, APPROVER.USERID, APPROVER.FULLNAME AS APPROVER, APPROVER.ROLEID, FLARE_REQUEST.WORKORDER ";
        sql += "FROM PROD_USERMGT APPROVER ";

        return sql;
    }

    public static string getFlareWaiverRequestsPendingMyApproval()
    {
        string sql = getFlaireApprovalMaster();

        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.USERID = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "WHERE (APPROVER.USERID = :iUserId) AND (FLARE_APPROVAL.STAND <> :iStand) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getFlareWaiverRequestsIApproved()
    {
        string sql = getFlaireApprovalMaster();

        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.USERID = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "WHERE (APPROVER.USERID = :iUserId) AND (FLARE_APPROVAL.STAND = :iStand) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getFlareWaiverRequestsIDidNotApprove()
    {
        string sql = getFlaireApprovalMaster();;

        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.USERID = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "WHERE (APPROVER.USERID = :iUserId) AND (FLARE_APPROVAL.STAND = :iStand) ORDER BY FLARE_REQUEST.IDREQUEST DESC";

        return sql;
    }

    public static string getFlareWaiverByRequestNumber()
    {
        string sql = getFlaireApprovalMaster();

        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.USERID = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "WHERE (FLARE_REQUEST.REQUESTNO = :sRequestNo)";
        return sql;
    }

    public static string getFlareWaiverByRequest()
    {
        string sql = getFlaireApprovalMaster();

        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.USERID = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        //sql += "WHERE (FLARE_REQUEST.REQUESTNO = :sRequestNo)";
        return sql;
    }


    public static string getFlareWaiverRequestByRequestId()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, PROD_USERMGT.USERID, FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, FLARE_REQUEST.BPSTATUS, ";
        sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "FLARE_REQUEST.DATE_CREATED, FLARE_REQUEST.START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, FLARE_REQUEST.END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_REQUEST.WORKORDER, ";
        sql += "FLARE_REQUEST.IDGMAPPROVAL, FLARE_REQUEST.DATE_APPROVED, FLARE_REQUEST.NEW_END_DATE ";
        sql += "FROM FLARE_CATEGORY, FLARE_REQUEST, FLARE_FACILITIES, PROD_USERMGT ";
        sql += "WHERE (FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY) AND (FLARE_REQUEST.IDUSER = PROD_USERMGT.USERID) AND (FLARE_REQUEST.IDREQUEST = :lRequestId)";

        return sql;
    }

    public static string getFlareWaiverRequestByFacilityYearMonth()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_FACILITIES.IDFACILITY, PROD_USERMGT.USERID, FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, FLARE_REQUEST.BPSTATUS, ";
        sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY') DATE_CREATED, ";
        sql += "TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY') START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY') END_DATE, FLARE_REQUEST.END_TIME, ";
        sql += "FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, ";
        sql += "FLARE_REQUEST.WORKORDER, FLARE_REQUEST.IDGMAPPROVAL, FLARE_REQUEST.DATE_APPROVED, FLARE_REQUEST.NEW_END_DATE ";
        sql += "FROM FLARE_CATEGORY, FLARE_REQUEST, FLARE_FACILITIES, PROD_USERMGT, FLARE_REQUEST_FACILITIES ";
        sql += "WHERE(FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY) ";
        sql += "AND(FLARE_REQUEST.IDUSER = PROD_USERMGT.USERID) ";
        sql += "AND FLARE_REQUEST_FACILITIES.IDREQUEST = FLARE_REQUEST.IDREQUEST ";
        sql += "AND FLARE_REQUEST_FACILITIES.IDFACILITY = FLARE_FACILITIES.IDFACILITY ";
        sql += "AND (TO_CHAR(TO_DATE(FLARE_REQUEST.DATE_APPROVED, 'DD-MON-YY'), 'YYYY') = :iYear) ";
        sql += "AND (TO_NUMBER(TO_CHAR(TO_DATE(FLARE_REQUEST.DATE_APPROVED, 'DD/MM/YYYY'), 'MM')) = :iMonth) ";
        sql += "AND (FLARE_FACILITIES.IDFACILITY = :iFacilityId) ";

        //string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_FACILITIES.IDFACILITY, PROD_USERMGT.USERID, FLARE_CATEGORY.IDCATEGORY, FLARE_CATEGORY.CATEGORY, ";
        //sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.ROLEIDFLR, PROD_USERMGT.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        //sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        //sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        //sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_REQUEST.WORKORDER, ";
        //sql += "FLARE_REQUEST.IDGMAPPROVAL, FLARE_REQUEST.DATE_APPROVED, FLARE_REQUEST.NEW_END_DATE ";
        //sql += "FROM FLARE_CATEGORY, FLARE_REQUEST, FLARE_FACILITIES, PROD_USERMGT ";
        //sql += "WHERE (FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY) AND (FLARE_REQUEST.IDUSER = PROD_USERMGT.USERID) ";
        //sql += "AND (TO_CHAR(TO_DATE(FLARE_REQUEST.DATE_APPROVED, 'DD-MON-YY'), 'YYYY') = :iYear) ";
        //sql += "AND (TO_NUMBER(TO_CHAR(TO_DATE(FLARE_REQUEST.DATE_APPROVED, 'DD/MM/YYYY'), 'MM')) = :iMonth) ";
        //sql += "AND (FLARE_FACILITIES.IDFACILITY = :iFacilityId) ";

        return sql;
    }

    public static string RaiseFlareWaiverRequest()
    {
        string sql = "INSERT INTO FLARE_REQUEST (IDREQUEST, IDCATEGORY, IDUSER, REQUESTNO, DATE_CREATED, STATUS, START_DATE, ";
        sql += "START_TIME, END_DATE, END_TIME, FLAREVOL, OILPROD, REASON, JUSTIFICATION, POSTEVENT, WORKORDER, BPSTATUS) ";
        sql += "VALUES (:lRequestId, :iCategoryId, :iUserId, :sRequestNumber, :sDateCreated, :iStatus, :sStartDate, ";
        sql += ":sStartTime, :sEndDate, :sEndTime, :sFlareVol, :sOilProduced, :sReason, :sJustification, :sPostEvent, :sWorkOrder, :iInOutBP)";
        return sql;
    }

    public static string UpdateFlareWaiverRequest()
    {
        string sql = "UPDATE FLARE_REQUEST SET IDCATEGORY = :iCategoryId, START_DATE = :sStartDate, START_TIME = :sStartTime, ";
        sql += "END_DATE = :sEndDate, END_TIME = :sEndTime, FLAREVOL = :sFlareVol, OILPROD = :sOilProduced, REASON = :sReason, ";
        sql += "JUSTIFICATION = :sJustification, POSTEVENT = :sPostEvent, WORKORDER = :sWorkOrder, BPSTATUS = :iInOutBP WHERE IDREQUEST = :lRequestId";
        return sql;
    }

    public static string UpdateRequestStatus()
    {
        string sql = "UPDATE FLARE_REQUEST SET STATUS = :iStatus WHERE (IDREQUEST = :lRequestId)";
        return sql;
    }

    public static string UpdateRequestApprovedByGMProduction()
    {
        string sql = "UPDATE FLARE_REQUEST SET IDGMAPPROVAL = :iUserId, DATE_APPROVED = :dDateApproved, NEW_END_DATE = :dNewEndDate WHERE (IDREQUEST = :lRequestId)";
        return sql;
    }

    public static string ReRouteRequest()
    {
        string sql = "UPDATE FLARE_APPROVAL SET IDUSER = :iUserId WHERE (IDREQUEST = :lRequestId) AND (IDROLE = :iRoleId)";
        return sql;
    }

    #endregion

    #region *********************************** Flare Waiver Request Approval

    public static string AssignRequestToNextApprover()
    {
        string sql = "INSERT INTO FLARE_APPROVAL (IDREQUEST, IDUSER, IDROLE, DATE_RECEIVED) VALUES (:lRequestId, :iUserId, :iRoleId, :sDateReceived)";
        return sql;
    }

    public static string UpdateAssignRequestToNextApprover()
    {
        string sql = "UPDATE FLARE_APPROVAL SET IDUSER = :iUserId, DATE_RECEIVED = :sDateReceived WHERE IDREQUEST = :lRequestId AND IDROLE = :iRoleId";
        return sql;
    }

    public static string ActionFlareWaiverRequest()
    {
        string sql = "UPDATE FLARE_APPROVAL SET STAND = :iStand, COMMENTS = :sComments, DATE_REVIEWED = :sDateReviewed WHERE (IDUSER = :iUserId) AND (IDREQUEST = :lRequestId)";
        return sql;
    }

    public static string ActionFlareWaiverRequestAuditTrail()
    {
        string sql = "INSERT INTO FLARE_APPROVAL_AUDIT (STAND, COMMENTS, DATE_REVIEWED, IDREQUEST) VALUES (:iStandId, :sComments, :sDateReviewed, :lRequestId)";
        return sql; 
    }

    public static string getAuditTrails()
    {
        string sql = "SELCET STAND, COMMENTS, DATE_REVIEWED FROM FLARE_APPROVAL_AUDIT";
        return sql;
    }

    public static string getFlareApprovalFlareRequestId()
    {
        string sql = "SELECT FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, TO_CHAR(FLARE_APPROVAL.DATE_RECEIVED, 'DD-MM-YYYY')DATE_RECEIVED, ";
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, FLARE_APPROVAL.IDREQUEST, ";
        sql += "PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.FULLNAME, PROD_USERMGT.STATUS, PROD_USERMGT.ROLEIDFLR, ";
        sql += "PROD_USERMGT.DELIGATED, PROD_USERMGT.PASSWORD, PROD_USERMGT.REFIND ";
        sql += "FROM FLARE_APPROVAL, PROD_USERMGT ";
        sql += "WHERE (FLARE_APPROVAL.IDUSER = PROD_USERMGT.USERID) AND (FLARE_APPROVAL.IDREQUEST = :lRequestId) ORDER BY FLARE_APPROVAL.IDAPPROVAL";

        //string sql = "SELECT IDAPPROVAL, IDREQUEST, IDUSER, IDROLE, STAND, DATE_RECEIVED, DATE_REVIEWED, COMMENTS FROM FLARE_APPROVAL WHERE IDREQUEST = :lRequestId";
        return sql; 
    }

    public static string getFlareApprovalFlareRequestRoleId()
    {
        string sql = "SELECT IDAPPROVAL, IDREQUEST, IDUSER AS USERID, IDROLE AS ROLEIDFLR, STAND, TO_CHAR(FLARE_APPROVAL.DATE_RECEIVED, 'DD-MM-YYYY')DATE_RECEIVED, ";
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')DATE_REVIEWED, COMMENTS FROM FLARE_APPROVAL ";
        sql += "WHERE (IDREQUEST = :lRequestId) AND (IDROLE = :iRoleId)";
        return sql; 
    }


    #endregion

    #region *********************************** Category

    public static string getCategoryByCatId()
    {
        string sql = "SELECT IDCATEGORY, CATEGORY FROM FLARE_CATEGORY WHERE IDCATEGORY = :iCategoryId";
        return sql;
    }

    public static string getCategories()
    {
        string sql = "SELECT IDCATEGORY, CATEGORY FROM FLARE_CATEGORY";
        return sql;
    }

    #endregion

    #region ***********************************  Facilities

    public static string InsertFacility()
    {
        string sql = "INSERT INTO FLARE_FACILITIES (IDAREA, FACILITY, CODE, AGG, LOCATION) VALUES (:IDAREA, :FACILITY, :CODE, :AGG, :LOCATION)";
        return sql;
    }

    public static string UpdateFacility()
    {
        string sql = "UPDATE FLARE_FACILITIES SET IDAREA = :IDAREA, FACILITY = :FACILITY, CODE = :CODE, AGG = :AGG, LOCATION = :LOCATION WHERE IDFACILITY = :IDFACILITY";
        return sql;
    }

    public static string getFacilityMaster()
    {
        string sql = "SELECT IDFACILITY, FACILITY, IDAREA, CODE, AGG, LOCATION FROM FLARE_FACILITIES ";
        return sql;
    }

    public static string getFacilityById()
    {
        string sql = getFacilityMaster();
        sql += "WHERE IDFACILITY = :iFacilityId";
        return sql;
    }

    public static string getFacilities()
    {
        string sql = getFacilityMaster();
        sql += "ORDER BY FACILITY";
        return sql;
    }

    public static string getFacilitiesByArea()
    {
        string sql = getFacilityMaster();
        sql += "WHERE IDAREA = :iAreaId ORDER BY FACILITY";
        return sql;
    }

    public static string getAGGFacilitiesByArea()
    {
        string sql = getFacilityMaster();
        sql += "WHERE IDAREA = :iAreaId AND CODE IS NOT NULL ORDER BY FACILITY";
        return sql;
    }

    #endregion

    #region //******************************* Request Facilities *************************************

    public static string InsertFacilityForRequest()
    {
        string sql = "INSERT INTO FLARE_REQUEST_FACILITIES (IDREQUEST, IDFACILITY) VALUES (:lRequestId, :iFacilityId)";
        return sql;
    }

    public static string getFacilitiesByRequestId()
    {
        string sql = "SELECT ID, IDREQUEST, IDFACILITY FROM FLARE_REQUEST_FACILITIES WHERE IDREQUEST = :lRequestId";
        return sql;
    }


    public static string getFacilitiesByRequest()
    {
        string sql = "SELECT FLARE_REQUEST_FACILITIES.IDREQUEST, FLARE_FACILITIES.FACILITY, FLARE_REQUEST_FACILITIES.IDFACILITY, FLARE_FACILITIES.IDAREA, ";
        sql += "FLARE_FACILITIES.CODE, FLARE_FACILITIES.AGG, FLARE_FACILITIES.LOCATION FROM FLARE_REQUEST_FACILITIES ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST_FACILITIES.IDFACILITY WHERE FLARE_REQUEST_FACILITIES.IDREQUEST = :lRequestId";

        return sql;
    }
    
    #endregion


    #region //******************************* Facilities Asset General Manager *************************************

    public static string getFacilitAssetGMByFacilityId()
    {
        string sql = "SELECT FLARE_FACILITIES.IDFACILITY, FLARE_FACILITIES.FACILITY, FLARE_FACILITIES_GMONOFFSHORE.IDFACILITYGM, FLARE_FACILITIES_GMONOFFSHORE.USERID FROM FLARE_FACILITIES ";
        sql += "INNER JOIN FLARE_FACILITIES_GMONOFFSHORE ON FLARE_FACILITIES.IDFACILITY = FLARE_FACILITIES_GMONOFFSHORE.IDFACILITY WHERE FLARE_FACILITIES.IDFACILITY = :iFacilityId";

        return sql;
    }

    public static string getFacilitiesAssignedToGM()
    {
        string sql = "SELECT * FROM FLARE_FACILITIES_GMONOFFSHORE WHERE FLARE_FACILITIES_GMONOFFSHORE.IDFACILITY = :iFacilityId AND FLARE_FACILITIES_GMONOFFSHORE.USERID = :iUserId";
        return sql;
    }

    public static string getFacilitiesAssignedToGMr()
    {
        //string sql = "SELECT PROD_USERMGT.FULLNAME, PROD_USERMGT.USERID, PROD_FACILITIES_PLANNER.ID_FACILITIES ";
        //sql += "FROM PROD_USERMGT INNER JOIN PROD_FACILITIES_PLANNER ON PROD_USERMGT.USERID = PROD_FACILITIES_PLANNER.ID_PLANNER ";
        //sql += "WHERE PROD_USERMGT.USERID = :USERID";

        string sql = "SELECT FLARE_FACILITIES.IDFACILITY, FLARE_FACILITIES.FACILITY, FLARE_FACILITIES_GMONOFFSHORE.IDFACILITYGM, FLARE_FACILITIES_GMONOFFSHORE.USERID ";
        sql += "FROM FLARE_FACILITIES_GMONOFFSHORE INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_FACILITIES_GMONOFFSHORE.IDFACILITY ";
        sql += "WHERE FLARE_FACILITIES_GMONOFFSHORE.USERID = :iUserId";

        return sql;
    }

    public static string InsertFacilityAssetGM()
    {
        string sql = "INSERT INTO FLARE_FACILITIES_GMONOFFSHORE (USERID, IDFACILITY) VALUES (:iUserId, :iFacilityId)";
        return sql;
    }

    //
    public static string UpdateFacilityAssetGM()
    {
        string sql = "UPDATE FLARE_FACILITIES_GMONOFFSHORE SET USERID = :iUserId, IDFACILITY = :iFacilityId WHERE IDFACILITYGM = :iFacilityGMId";
        return sql;
    }
    #endregion


    //******************************** Reporting in Flare Waiver *******************************************

    public static string getYear()
    {
        string sql = "SELECT DISTINCT TO_CHAR(to_date(FLARE_REQUEST.DATE_CREATED, 'DD-MON-YY'), 'YYYY') AS YYEAR FROM FLARE_REQUEST ORDER BY YYEAR"; // DESC

        return sql;
    }

    public static string ReportMain()
    {
        string sql = "SELECT DISTINCT FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, ";
        sql += "FLARE_REQUEST.STATUS, ";
        sql += "FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, ";
        sql += "FLARE_APPROVAL.STAND, ";
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_RECEIVED, 'DD-MM-YYYY')DATE_RECEIVED, "; //TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')DATE_REVIEWED, ";
        sql += "FLARE_APPROVAL.IDROLE, ";
        sql += "FLARE_REQUEST.IDREQUEST, ";
        sql += "FLARE_REQUEST.IDCATEGORY, ";
        sql += "FLARE_REQUEST.IDFACILITY, ";
        sql += "FLARE_REQUEST.IDUSER AS USERID, ";
        sql += "TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, ";
        sql += "FLARE_REQUEST.END_TIME, ";
        sql += "FLARE_REQUEST.REASON, ";
        sql += "FLARE_REQUEST.POSTEVENT, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, ";
        sql += "FLARE_REQUEST.WORKORDER, ";
        sql += "FLARE_REQUEST.IDGMAPPROVAL, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_APPROVED, 'DD-MM-YYYY')DATE_APPROVED, ";
        sql += "TO_CHAR(FLARE_REQUEST.NEW_END_DATE, 'DD-MM-YYYY')NEW_END_DATE ";
        sql += "FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_APPROVAL ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";

        return sql;
    }

    public static string GetProposalsPendingLineSupport()
    {
        string sql = ReportMain();
        sql += " WHERE FLARE_REQUEST.STATUS = :iStatus AND TO_CHAR(to_date(FLARE_REQUEST.DATE_CREATED, 'DD-MON-YY'), 'YYYY') = :iYear";


        //string sql = "SELECT DISTINCT FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.DATE_CREATED, FLARE_REQUEST.STATUS, FLARE_REQUEST.FLAREVOL, ";
        //sql += "FLARE_REQUEST.OILPROD, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.IDROLE ";
        //sql += "FROM FLARE_REQUEST ";
        //sql += "INNER JOIN FLARE_APPROVAL ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        //sql += "WHERE FLARE_REQUEST.STATUS = :iStatus AND TO_CHAR(to_date(FLARE_REQUEST.DATE_CREATED, 'DD-MON-YY'), 'YYYY') = :iYear";

        return sql;
    }

    public static string GetProposalsApprovedByGmp()
    {
        string sql = ReportMain();
        sql += " WHERE FLARE_REQUEST.STATUS = :iStatus AND TO_CHAR(to_date(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MON-YY'), 'YYYY') = :iYear AND FLARE_APPROVAL.IDROLE = :iRole AND FLARE_APPROVAL.DATE_REVIEWED IS NOT NULL";

        //string sql = "SELECT DISTINCT FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.DATE_CREATED, FLARE_REQUEST.STATUS, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, ";
        //sql += "FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.IDROLE FROM FLARE_REQUEST ";
        //sql += "INNER JOIN FLARE_APPROVAL ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        //sql += " WHERE FLARE_REQUEST.STATUS = :iStatus AND TO_CHAR(to_date(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MON-YY'), 'YYYY') = :iYear AND FLARE_APPROVAL.IDROLE = :iRole";
        //Approved = 4, NotApprovedByGMP = 15, GMP RoleId = 5

        return sql;
    }

    public static string GetFlareTargetByYear()
    {
        string sql = "SELECT FLARE_TARGET.TARGETID, FLARE_TARGET.IYEAR, FLARE_FACILITIES.IDFACILITY, FLARE_FACILITIES.FACILITY, FLARE_FACILITIES.CODE, FLARE_FACILITIES.AGG, ";
        sql += "FLARE_TARGET.JAN, FLARE_TARGET.FEB, FLARE_TARGET.MAR, FLARE_TARGET.APR, FLARE_TARGET.MAY, FLARE_TARGET.JUN, FLARE_TARGET.JUL, FLARE_TARGET.AUG, ";
        sql += "FLARE_TARGET.SEP, FLARE_TARGET.OCT, FLARE_TARGET.NOV, FLARE_TARGET.DECB, FLARE_TARGET.YTD FROM FLARE_FACILITIES ";
        sql += "INNER JOIN FLARE_TARGET ON FLARE_FACILITIES.IDFACILITY = FLARE_TARGET.IDFACILITY WHERE FLARE_TARGET.IYEAR = :iYear ORDER BY FLARE_FACILITIES.FACILITY";

        return sql;
    }

    public static string InsertFlareTarget()
    {
        string sql = "INSERT INTO FLARE_TARGET (IDFACILITY, IYEAR, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DECB, YTD) ";
        sql += "VALUES (:iFacilityId, :iYear, :iJan, :iFeb, :iMar, :iApr, :iMay, :iJun, :iJul, :iAug, :iSep, :iOct, :iNov, :iDec, :iYtd)";

        return sql;
    }

    public static string UpdateFlareTarget()
    {
        string sql = "UPDATE FLARE_TARGET SET IDFACILITY = :iFacilityId, JAN = :iJan, FEB = :iFeb, MAR = :iMar, APR = :iApr, MAY = :iMay, JUN = :iJun, ";
        sql += "JUL = :iJul, AUG = :iAug, SEP = :iSep, OCT = :iOct, NOV = :iNov, DECB = :iDec, YTD = :iYtd WHERE TARGETID = :lTargetId";
        
        return sql;
    }

    public static string UpdateMidDay()
    {
        string sql = "UPDATE FLARE_MONITOR SET MID_DAY = :dDate";
        return sql;
    }
    public static string getMidDay()
    {
        string sql = "SELECT MID_DAY FROM FLARE_MONITOR";
        return sql;
    }

    public static string getYearFlareTarget()
    {
        string sql = "SELECT DISTINCT IYEAR FROM FLARE_TARGET";
        return sql;
    }

    public static string getViolationMailList()
    {
        string sql = "SELECT VIOLATIONID, USERID FROM FLARE_LST_VIOLATION";
        return sql;
    }

    public static string getViolationMailListByUserId()
    {
        string sql = "SELECT VIOLATIONID, USERID FROM FLARE_LST_VIOLATION WHERE USERID = :iUserId";
        return sql;
    }

    public static string InsertViolationMailList()
    {
        string sql = "INSERT INTO FLARE_LST_VIOLATION (USERID) VALUES (:iUserId)";
        return sql;
    }

    public static string UpdateViolationMailList()
    {
        string sql = "UPDATE FLARE_LST_VIOLATION SET USERID = :iUserId WHERE VIOLATIONID = :iViolationId";
        return sql;
    }

    public static string DeleteViolationMailList()
    {
        string sql = "DELETE FROM FLARE_LST_VIOLATION WHERE USERID = :iUserId";
        return sql;
    }
}

