
/// <summary>
/// Summary description for StoredProcedure
/// </summary>

public static class StoredProcedureFlareWaiver
{
    static StoredProcedureFlareWaiver()
    {

    }

    #region *********************************** Staff Details from Information Ware House *******************

    public static string getUserFromIWH()
    {
        string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM  " + AppConfiguration.informationWareHouse;
        sql += " WHERE UPPER(SURNAME) LIKE :SURNAME OR UPPER(FIRST_NAME) LIKE :FIRST_NAME";
        return sql;
    }

    public static string getUserByDomainLoginID()
    {
        string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
        sql += " WHERE lower(substr(EMAIL,1,instr(EMAIL,'@')-1)) = lower(:sEmail)";

        return sql;
    }

    public static string CompleteStafDetailsBySurName()
    {
        string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
        sql += " WHERE upper(SURNAME) LIKE :SURNAME AND USERNAME IS NOT NULL";

        return sql;
    }

    public static string getUserFromCompleteStaffDetailsByUserName()
    {
        string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
        sql += " WHERE upper(USERNAME) = :USERNAME";
        return sql;
    }

    public static string CompleteStafDetailsByStaffNumber()
    {
        string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
        sql += " WHERE upper(STAFF_NUMBER) = :STAFF_NUMBER";
        return sql;
    }

    #endregion

    #region *********************************** Users *******************************************************

    public static string getUsers()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS WHERE STATUS=  :iStatus";
        return sql;
    }

    public static string searchUser()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, DELIGATED, IDROLE FROM FLARE_USERS ";
        sql += "WHERE (upper(FULLNAME) LIKE :SEARCHKEY OR upper(USERNAME) LIKE :SEARCHKEY) AND STATUS = :STATUS";

        return sql;
    }

    public static string getOnlineUser()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS WHERE lower(substr(EMAIL,1,instr(EMAIL,'@')-1)) = lower(:UserName)";
        return sql;
    }

    public static string getOnlineUserByUsername()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS WHERE USERNAME = :UserName";
        return sql;
    }

    public static string CreateUserAccount()
    {
        string sql = "INSERT INTO FLARE_USERS (IDUSER, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, IDROLE) VALUES (:IDUSER, :USERNAME, :STATUS, :FULLNAME, :EMAIL, :REFIND, :ROLEID)";
        return sql;
    }

    public static string MakeDeligate()
    {
        string sql = "UPDATE FLARE_USERS SET DELIGATED = :iDeligated WHERE IDUSER = :iUserId"; 
        return sql;
    }

    public static string RouteRequestToNewDeligate()
    {
        string sql = "UPDATE FLARE_APPROVAL SET IDUSER = :iUserId WHERE (IDROLE = :iRoleId) ";
        sql += "AND IDREQUEST IN (SELECT IDREQUEST FROM FLARE_REQUEST WHERE STATUS <> :iStatus)";
        return sql;
    }

    public static string DeleteUserAccount()
    {
        string sql = "UPDATE FLARE_USERS SET STATUS = :iStatus WHERE IDUSER = :iUserId";
        return sql;
    }

    public static string UpdateUserAccount()
    {
        string sql = "UPDATE FLARE_USERS SET IDROLE = :iRoleId WHERE IDUSER = :iUserId";
        return sql;
    }

    public static string CreateUserAccountEx()
    {
        string sql = "INSERT INTO FLARE_USERS (IDUSER, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, IDROLE, PASSWORD) VALUES (:IDUSER, :USERNAME, :STATUS, :FULLNAME, :EMAIL, :REFIND, :ROLEID, :PASSWORD)";
        return sql;
    }

    public static string updateUserAccountPswEx()
    {
        string sql = "UPDATE FLARE_USERS SET PASSWORD = :PASSWORD WHERE (EMAIL = :EMAIL) AND (STATUS = :STATUS)";
        return sql;
    }

    public static string getLoginUserAccountEx()
    {
        string sql = "SELECT IDUSER, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, IDROLE, DELIGATED, PASSWORD FROM FLARE_USERS WHERE (PASSWORD = :PASSWORD) AND (USERNAME = :USERNAME) AND (STATUS = :STATUS)";
        return sql;
    }

    public static string getUserAccountByGuidPswEx()
    {
        string sql = "SELECT IDUSER, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, IDROLE, DELIGATED, PASSWORD FROM FLARE_USERS WHERE (PASSWORD = :PASSWORD) AND (STATUS = :STATUS)";
        return sql;
    }

    public static string updateUser()
    {
        string sql = "UPDATE FLARE_USERS SET IDROLE = :ROLEID WHERE IDUSER = :USERID";
        return sql;
    }

    public static string disableUserAccount()
    {
        string sql = "UPDATE FLARE_USERS SET STATUS = :STATUS WHERE IDUSER = :USERID";
        return sql;
    }

    public static string getUserByEmailAddress()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND, PASSWORD FROM FLARE_USERS WHERE STATUS = :iStatus AND EMAIL = :sEmail";
        return sql;
    }

    public static string getUserByUserId()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS WHERE IDUSER = :iUserId";
        return sql;
    }

    public static string getUserByUserRoleId()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS WHERE (IDROLE = :iRoleId) AND (STATUS = :iStatus)";
        return sql;
    }

    public static string getDeligatedUserByRoleId()
    {
        string sql = "SELECT IDUSER, USERNAME, EMAIL, FULLNAME, STATUS, IDROLE, DELIGATED, REFIND FROM FLARE_USERS ";
        sql += "WHERE (IDROLE = :iRoleId) AND (STATUS = :iStatus) AND (DELIGATED = :iDeligated)";
        return sql;
    }

    #endregion ***************************************

    #region  *********************************** Flare Waiver Requests
    //TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE

    public static string getFlareWaiverRequestsByStatus()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, FLARE_USERS.FULLNAME, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_REQUEST.STATUS = :iStatus)";

        return sql;
    }

    public static string getPendingFlareWaiverRequests()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, FLARE_USERS.FULLNAME, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_REQUEST.STATUS <> :iStatus)";

        return sql;
    }

    public static string getFlareWaiverRequestByRequestId()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_USERS.IDUSER, FLARE_CATEGORY.IDCATEGORY, FLARE_FACILITIES.IDFACILITY, FLARE_CATEGORY.CATEGORY, ";
        sql += "FLARE_FACILITIES.FACILITY, FLARE_USERS.FULLNAME, FLARE_USERS.IDROLE, FLARE_USERS.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT ";
        sql += "FROM FLARE_CATEGORY, FLARE_REQUEST, FLARE_FACILITIES, FLARE_USERS ";
        sql += "WHERE (FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY) AND (FLARE_REQUEST.IDFACILITY = FLARE_FACILITIES.IDFACILITY) ";
        sql += "AND (FLARE_REQUEST.IDUSER = FLARE_USERS.IDUSER) AND (FLARE_REQUEST.IDREQUEST = :lRequestId)";

        return sql;
    }
    
    public static string getMyFlareWaiverPendingRequests()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_USERS.IDUSER, FLARE_CATEGORY.IDCATEGORY, FLARE_FACILITIES.IDFACILITY, FLARE_CATEGORY.CATEGORY, ";
        sql += "FLARE_FACILITIES.FACILITY, FLARE_USERS.FULLNAME, FLARE_USERS.IDROLE, FLARE_USERS.EMAIL, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, ";
        sql += "FLARE_REQUEST.START_TIME, TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, ";
        sql += "FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_USERS.IDUSER = :iUserId) AND (FLARE_REQUEST.STATUS <> :iStatus)";

        return sql;
    }

    public static string getMyFlareWaiverApprovedRequests()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, ";
        sql += "FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_USERS.FULLNAME FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_USERS.IDUSER = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus)";

        return sql;
    }

    public static string getMyFlareWaiverNotApprovedRequests()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, ";
        sql += "FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_USERS.FULLNAME FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_USERS.IDUSER = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus)";

        return sql;
    }

    public static string getMyFlareWaiverCancelledRequests()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, FLARE_REQUEST.REQUESTNO, FLARE_REQUEST.STATUS, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, ";
        sql += "FLARE_REQUEST.REASON, FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_USERS.FULLNAME FROM FLARE_REQUEST ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "INNER JOIN FLARE_USERS ON FLARE_USERS.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "WHERE (FLARE_USERS.IDUSER = :iUserId) AND (FLARE_REQUEST.STATUS = :iStatus)";

        return sql;
    }

    public static string getFlareWaiverRequestsPendingMyApproval()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, INITIATOR.FULLNAME AS INITIATOR, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, ";
        sql += "FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, APPROVER.IDUSER, APPROVER.FULLNAME AS APPROVER, APPROVER.IDROLE ";
        sql += "FROM FLARE_USERS APPROVER ";
        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.IDUSER = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN FLARE_USERS INITIATOR ON INITIATOR.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "WHERE (APPROVER.IDUSER = :iUserId) AND (FLARE_APPROVAL.STAND <> :iStand)";

        return sql;
    }

    public static string getFlareWaiverRequestsIApproved()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, INITIATOR.FULLNAME AS INITIATOR, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, ";
        sql += "FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, APPROVER.IDUSER, APPROVER.FULLNAME AS APPROVER, APPROVER.IDROLE ";
        sql += "FROM FLARE_USERS APPROVER ";
        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.IDUSER = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN FLARE_USERS INITIATOR ON INITIATOR.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "WHERE (APPROVER.IDUSER = :iUserId) AND (FLARE_APPROVAL.STAND = :iStand)";

        return sql;
    }

    public static string getFlareWaiverRequestsIDidNotApprove()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, INITIATOR.FULLNAME AS INITIATOR, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, ";
        sql += "FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, APPROVER.IDUSER, APPROVER.FULLNAME AS APPROVER, APPROVER.IDROLE ";
        sql += "FROM FLARE_USERS APPROVER ";
        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.IDUSER = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN FLARE_USERS INITIATOR ON INITIATOR.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "WHERE (APPROVER.IDUSER = :iUserId) AND (FLARE_APPROVAL.STAND = :iStand)";

        return sql;
    }

    public static string RaiseFlareWaiverRequest()
    {
        string sql = "INSERT INTO FLARE_REQUEST (IDREQUEST, IDCATEGORY, IDFACILITY, IDUSER, REQUESTNO, DATE_CREATED, ";
        sql += "STATUS, START_DATE, START_TIME, END_DATE, END_TIME, FLAREVOL, OILPROD, REASON, JUSTIFICATION, POSTEVENT) ";
        sql += "VALUES (:lRequestId, :iCategoryId,:iFacilityId, :iUserId, :sRequestNumber, :sDateCreated, :iStatus, ";
        sql += ":sStartDate, :sStartTime, :sEndDate, :sEndTime, :sFlareVol, :sOilProduced, :sReason, :sJustification, :sPostEvent)";
        return sql;
    }

    public static string UpdateRequestStatus()
    {
        string sql = "UPDATE FLARE_REQUEST SET STATUS = :iStatus WHERE (IDREQUEST = :lRequestId)";
        return sql;
    }

    public static string ReRouteRequest()
    {
        string sql = "UPDATE FLARE_APPROVAL SET IDUSER = :iUserId WHERE (IDREQUEST = :lRequestId) AND (IDROLE = :iRoleId)";
        return sql;
    }

    public static string getFlareWaiverByRequestNumber()
    {
        string sql = "SELECT FLARE_REQUEST.IDREQUEST, FLARE_CATEGORY.CATEGORY, FLARE_FACILITIES.FACILITY, INITIATOR.FULLNAME AS INITIATOR, FLARE_REQUEST.REQUESTNO, ";
        sql += "TO_CHAR(FLARE_REQUEST.DATE_CREATED, 'DD-MM-YYYY')DATE_CREATED, FLARE_REQUEST.STATUS, TO_CHAR(FLARE_REQUEST.START_DATE, 'DD-MM-YYYY')START_DATE, FLARE_REQUEST.START_TIME, ";
        sql += "TO_CHAR(FLARE_REQUEST.END_DATE, 'DD-MM-YYYY')END_DATE, FLARE_REQUEST.END_TIME, FLARE_REQUEST.FLAREVOL, FLARE_REQUEST.OILPROD, FLARE_REQUEST.REASON, ";
        sql += "FLARE_REQUEST.JUSTIFICATION, FLARE_REQUEST.POSTEVENT, FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, FLARE_APPROVAL.DATE_RECEIVED, ";
        sql += "FLARE_APPROVAL.DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, APPROVER.IDUSER, APPROVER.FULLNAME AS APPROVER, APPROVER.IDROLE ";
        sql += "FROM FLARE_USERS APPROVER ";
        sql += "INNER JOIN FLARE_APPROVAL ON APPROVER.IDUSER = FLARE_APPROVAL.IDUSER ";
        sql += "INNER JOIN FLARE_REQUEST ON FLARE_REQUEST.IDREQUEST = FLARE_APPROVAL.IDREQUEST ";
        sql += "INNER JOIN FLARE_USERS INITIATOR ON INITIATOR.IDUSER = FLARE_REQUEST.IDUSER ";
        sql += "INNER JOIN FLARE_CATEGORY ON FLARE_CATEGORY.IDCATEGORY = FLARE_REQUEST.IDCATEGORY ";
        sql += "INNER JOIN FLARE_FACILITIES ON FLARE_FACILITIES.IDFACILITY = FLARE_REQUEST.IDFACILITY ";
        sql += "WHERE (FLARE_REQUEST.REQUESTNO = :sRequestNo)";
        return sql;
    }

    #endregion

    #region *********************************** Flare Waiver Request Approval

    public static string AssignRequestToNextApprover()
    {
        string sql = "INSERT INTO FLARE_APPROVAL (IDREQUEST, IDUSER, IDROLE, DATE_RECEIVED) VALUES (:lRequestId, :iUserId, :iRoleId, :sDateReceived)";
        return sql;
    }

    public static string ActionFlareWaiverRequest()
    {
        string sql = "UPDATE FLARE_APPROVAL SET STAND = :iStand, COMMENTS = :sComments, DATE_REVIEWED = :sDateReviewed WHERE (IDUSER = :iUserId) AND (IDREQUEST = :lRequestId)";
        return sql;
    }

    public static string ActionFlareWaiverRequestAuditTrail()
    {
        string sql = "INSERT INTO FLARE_APPROVAL_AUDIT (STAND, COMMENTS, DATE_REVIEWED, IDREQUEST) VALUES (:iStandId, :sComments, sDateReviewed, :lRequestId)";
        return sql; 
    }

    public static string getFlareApprovalFlareRequestId()
    {
        string sql = "SELECT FLARE_APPROVAL.IDAPPROVAL, FLARE_APPROVAL.STAND, TO_CHAR(FLARE_APPROVAL.DATE_RECEIVED, 'DD-MM-YYYY')DATE_RECEIVED, ";
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')DATE_REVIEWED, FLARE_APPROVAL.COMMENTS, FLARE_APPROVAL.IDREQUEST, ";
        sql += "FLARE_USERS.IDUSER, FLARE_USERS.USERNAME, FLARE_USERS.EMAIL, FLARE_USERS.FULLNAME, FLARE_USERS.STATUS, FLARE_USERS.IDROLE, ";
        sql += "FLARE_USERS.DELIGATED, FLARE_USERS.PASSWORD, FLARE_USERS.REFIND ";
        sql += "FROM FLARE_APPROVAL, FLARE_USERS ";
        sql += "WHERE (FLARE_APPROVAL.IDUSER = FLARE_USERS.IDUSER) AND (FLARE_APPROVAL.IDREQUEST = :lRequestId) ORDER BY FLARE_USERS.IDROLE";

        //string sql = "SELECT IDAPPROVAL, IDREQUEST, IDUSER, IDROLE, STAND, DATE_RECEIVED, DATE_REVIEWED, COMMENTS FROM FLARE_APPROVAL WHERE IDREQUEST = :lRequestId";
        return sql; 
    }

    public static string getFlareApprovalFlareRequestRoleId()
    {
        string sql = "SELECT IDAPPROVAL, IDREQUEST, IDUSER, IDROLE, STAND, TO_CHAR(FLARE_APPROVAL.DATE_RECEIVED, 'DD-MM-YYYY')DATE_RECEIVED, ";
        sql += "TO_CHAR(FLARE_APPROVAL.DATE_REVIEWED, 'DD-MM-YYYY')DATE_REVIEWED, COMMENTS FROM FLARE_APPROVAL ";
        sql += "WHERE (IDREQUEST = :lRequestId) AND (IDROLE = :iRoleId)";
        return sql; 
    }


    #endregion

    #region *********************************** Category

    public static string getCategoryByCatId()
    {
        string sql = "SELECT IDCATEGORY, CATEGORY FROM FLARE_CATEGORY WHERE IDCATEGORY = :iCategoryId";
        return sql;
    }

    public static string getCategories()
    {
        string sql = "SELECT IDCATEGORY, CATEGORY FROM FLARE_CATEGORY";
        return sql;
    }

    #endregion

    #region ***********************************  Facilities

    public static string getFacilityById()
    {
        string sql = "SELECT IDFACILITY, FACILITY FROM FLARE_FACILITIES WHERE IDFACILITY = :iFacilityId";
        return sql;
    }

    public static string getFacilities()
    {
        string sql = "SELECT IDFACILITY, FACILITY FROM FLARE_FACILITIES ORDER BY FACILITY";
        return sql;
    }

    #endregion
}