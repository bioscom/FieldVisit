using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// Summary description for StoredProcedure
/// </summary>

public static class StoredProcedureManHour
{
    static StoredProcedureManHour()
    {

    }

    //Note: The District, Facility and User Management are managed from PEC application

    #region************************** District ****************************************

    public static string getDistrictsByOU()
    {
        //TODO: Note, there is need to further breakdown relationship to the level of OU->District->Facilities
        string sql = "SELECT ID_DISTRICT, ID_SUPERINTENDENT, DISTRICT FROM PROD_DISTRICT";
        return sql;
    }

    public static string getDistrictDetails()
    {
        string sql = "SELECT PROD_SUPERINTENDENT.ID_SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT_EMAIL, ";
        sql += "PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT ";
        sql += "FROM PROD_DISTRICT INNER JOIN PROD_SUPERINTENDENT ON PROD_DISTRICT.ID_SUPERINTENDENT = PROD_SUPERINTENDENT.ID_SUPERINTENDENT";

        return sql;
    }

    public static string getDistrictById()
    {
        string sql = "SELECT ID_DISTRICT, ID_SUPERINTENDENT, DISTRICT FROM PROD_DISTRICT WHERE ID_DISTRICT = :ID_DISTRICT";
        return sql;
    }

    public static string getDistrictByInitiativeId()
    {
        string sql = "SELECT DISTINCT PROD_DISTRICT.DISTRICT, MANHR_INITIATIVE.IDINITIATIVE, PROD_FACILITIES.FACILITIES ";
        sql += "FROM MANHR_INIT_DIST_FACILITIES, MANHR_INITIATIVE, PROD_FACILITIES, PROD_DISTRICT ";
        sql += "WHERE MANHR_INIT_DIST_FACILITIES.IDINITIATIVE = MANHR_INITIATIVE.IDINITIATIVE AND ";
        sql += "MANHR_INIT_DIST_FACILITIES.ID_FACILITIES = PROD_FACILITIES.ID_FACILITIES AND PROD_FACILITIES.ID_DISTRICT = PROD_DISTRICT.ID_DISTRICT ";
        sql += "AND MANHR_INITIATIVE.IDINITIATIVE = :lInitiativeId";

        return sql;
    }

    public static string getDistrictDetailsById()
    {
        string sql = "SELECT PROD_SUPERINTENDENT.ID_SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT_EMAIL, ";
        sql += "PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT ";
        sql += "FROM PROD_DISTRICT INNER JOIN PROD_SUPERINTENDENT ON PROD_DISTRICT.ID_SUPERINTENDENT = PROD_SUPERINTENDENT.ID_SUPERINTENDENT ";
        sql += "WHERE PROD_DISTRICT.ID_DISTRICT = :ID_DISTRICT";

        return sql;
    }

    public static string getDistrictBySuperintendent()
    {
        string sql = "SELECT ID_DISTRICT, ID_SUPERINTENDENT, DISTRICT FROM PROD_DISTRICT WHERE ID_SUPERINTENDENT = :ID_SUPERINTENDENT";
        return sql;
    }

    public static string insertDistrict()
    {
        string sql = "INSERT INTO PROD_DISTRICT (ID_SUPERINTENDENT, DISTRICT) VALUES (:ID_SUPERINTENDENT, :DISTRICT)";

        return sql;
    }

    public static string updateDistrict()
    {
        string sql = "UPDATE PROD_DISTRICT SET ID_SUPERINTENDENT = :ID_SUPERINTENDENT, DISTRICT = :DISTRICT WHERE ID_DISTRICT = :ID_DISTRICT";
        return sql;
    }

    #endregion

    #region************************** Facility **********************************************

    public static string getFacility()
    {
        string sql = "SELECT ID_FACILITIES, ID_DISTRICT, FACILITIES FROM PROD_FACILITIES ORDER BY FACILITIES";
        return sql;
    }

    public static string getFacilityDetails()
    {
        string sql = "SELECT PROD_FACILITIES.ID_FACILITIES, PROD_FACILITIES.FACILITIES, PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, ";
        sql += "PROD_SUPERINTENDENT.ID_SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT_EMAIL ";
        sql += "FROM PROD_FACILITIES ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_FACILITIES.ID_DISTRICT = PROD_DISTRICT.ID_DISTRICT ";
        sql += "INNER JOIN PROD_SUPERINTENDENT ON PROD_DISTRICT.ID_SUPERINTENDENT = PROD_SUPERINTENDENT.ID_SUPERINTENDENT";

        return sql;
    }

    public static string getFacilityById()
    {
        string sql = "SELECT ID_FACILITIES, ID_DISTRICT, FACILITIES FROM PROD_FACILITIES ";
        sql += "WHERE ID_FACILITIES = :ID_FACILITIES";
        return sql;
    }

    public static string getFacilitiesByInitiativeId()
    {
        string sql = "SELECT MANHR_INIT_DIST_FACILITIES.IDINITIATIVE, PROD_FACILITIES.ID_FACILITIES, ";
        sql += "PROD_FACILITIES.FACILITIES, PROD_FACILITIES.ID_DISTRICT ";
        sql += "FROM MANHR_INIT_DIST_FACILITIES ";
        sql += "INNER JOIN PROD_FACILITIES ON PROD_FACILITIES.ID_FACILITIES = MANHR_INIT_DIST_FACILITIES.ID_FACILITIES ";
        sql += "WHERE MANHR_INIT_DIST_FACILITIES.IDINITIATIVE = :lInitiativeId";

        return sql;
    }

    public static string getFacilityPlannerByFacilityId()
    {
        string sql = "SELECT PROD_FACILITIES.ID_FACILITIES, PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.USERNAME, ";
        sql += "PROD_USERMGT.ROLEID, PROD_FACILITIES_PLANNER.ID_FACILITY_PLANNER, PROD_FACILITIES_PLANNER.ID_PLANNER FROM PROD_FACILITIES ";
        sql += "INNER JOIN PROD_FACILITIES_PLANNER ON PROD_FACILITIES.ID_FACILITIES = PROD_FACILITIES_PLANNER.ID_FACILITIES ";
        sql += "INNER JOIN PROD_USERMGT ON PROD_FACILITIES_PLANNER.ID_PLANNER = PROD_USERMGT.USERID ";
        sql += "WHERE (PROD_FACILITIES.ID_FACILITIES = :ID_FACILITIES)";

        return sql;
    }

    public static string getFacilityPlannerByPlannerId()
    {
        string sql = "SELECT PROD_USERMGT.USERID, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.USERNAME ";
        sql += "FROM PROD_FACILITIES_PLANNER INNER JOIN PROD_USERMGT ON PROD_FACILITIES_PLANNER.ID_PLANNER = PROD_USERMGT.USERID ";
        sql += "WHERE (PROD_USERMGT.USERID = :ID_PLANNER)";

        return sql;
    }

    //public static string getFacilityByDistrict()
    //{
    //    string sql = "SELECT PROD_FACILITIES.ID_FACILITIES, PROD_FACILITIES.FACILITIES, PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT, ";
    //    sql += "PROD_SUPERINTENDENT.ID_SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT FROM PROD_DISTRICT ";
    //    sql += "INNER JOIN PROD_FACILITIES ON PROD_DISTRICT.ID_DISTRICT = PROD_FACILITIES.ID_DISTRICT ";
    //    sql += "INNER JOIN PROD_SUPERINTENDENT ON PROD_DISTRICT.ID_SUPERINTENDENT = PROD_SUPERINTENDENT.ID_SUPERINTENDENT ";
    //    sql += "WHERE PROD_DISTRICT.ID_DISTRICT = :ID_DISTRICT";

    //    return sql;
    //}

    public static string getFacilityByDistrictId()
    {
        string sql = "SELECT PROD_FACILITIES.ID_FACILITIES, PROD_FACILITIES.FACILITIES, PROD_DISTRICT.ID_DISTRICT, PROD_DISTRICT.DISTRICT FROM PROD_DISTRICT ";
        sql += "LEFT OUTER JOIN PROD_FACILITIES ON PROD_DISTRICT.ID_DISTRICT = PROD_FACILITIES.ID_DISTRICT ";
        sql += "WHERE (PROD_DISTRICT.ID_DISTRICT = :ID_DISTRICT) ORDER BY PROD_FACILITIES.FACILITIES";

        return sql;
    }

    public static string getSuperintendentByFacilityId()
    {
        string sql = "SELECT PROD_SUPERINTENDENT.ID_SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT, PROD_SUPERINTENDENT.SUPERINTENDENT_EMAIL, ";
        sql += "PROD_FACILITIES.ID_FACILITIES FROM PROD_FACILITIES ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_FACILITIES.ID_DISTRICT = PROD_DISTRICT.ID_DISTRICT ";
        sql += "INNER JOIN PROD_SUPERINTENDENT ON PROD_DISTRICT.ID_SUPERINTENDENT = PROD_SUPERINTENDENT.ID_SUPERINTENDENT ";
        sql += "WHERE (PROD_FACILITIES.ID_FACILITIES = :ID_FACILITIES)";

        return sql;
    }

    public static string insertFacility()
    {
        string sql = "INSERT INTO PROD_FACILITIES (ID_DISTRICT, FACILITIES) VALUES (:ID_DISTRICT, :FACILITIES)";
        return sql;
    }

    public static string insertPlannerFacility()
    {
        string sql = "INSERT INTO PROD_FACILITIES_PLANNER (ID_FACILITIES, ID_PLANNER) VALUES (:ID_FACILITIES, :ID_PLANNER)";
        return sql;
    }

    public static string updateFacility()
    {
        string sql = "UPDATE PROD_FACILITIES SET ID_DISTRICT = :ID_DISTRICT, FACILITIES = :FACILITIES WHERE ID_FACILITIES = :ID_FACILITIES";
        return sql;
    }

    public static string getFacilitiesAssignedToPlanner()
    {
        string sql = "SELECT PROD_USERMGT.FULLNAME, PROD_USERMGT.USERID, PROD_FACILITIES_PLANNER.ID_FACILITIES ";
        sql += "FROM PROD_USERMGT INNER JOIN PROD_FACILITIES_PLANNER ON PROD_USERMGT.USERID = PROD_FACILITIES_PLANNER.ID_PLANNER ";
        sql += "WHERE PROD_USERMGT.USERID = :USERID";

        return sql;
    }

    public static string getFacilityForUser()
    {
        string sql = "SELECT ID_FACILITIES, ID_PLANNER FROM PROD_FACILITIES_PLANNER WHERE ID_FACILITIES = :ID_FACILITIES AND ID_PLANNER = :ID_PLANNER";
        return sql;
    }

    #endregion

    //#region ********************* USER Management *********************

    //public static string getOnlineUser()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE lower(substr(EMAIL,1,instr(EMAIL,'@')-1)) = lower(:UserName)";
    //    return sql;
    //}

    //public static string getUserByUserId()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :STATUS AND USERID = :USERID";
    //    return sql;
    //}

    //public static string getUserByUserName()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :STATUS AND USERNAME = :USERNAME";
    //    return sql;
    //}

    //public static string getUserByRoleId()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :STATUS AND ROLEID = :ROLEID";
    //    return sql;
    //}

    //public static string CreateUserAccount()
    //{
    //    string sql = "INSERT INTO PROD_USERMGT (USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID) VALUES(:USERNAME, :STATUS, :FULLNAME, :EMAIL, :REFIND, :ROLEID)";
    //    return sql;
    //}

    //public static string CreateUserAccountEx()
    //{
    //    string sql = "INSERT INTO PROD_USERMGT (USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD) VALUES(:USERNAME, :STATUS, :FULLNAME, :EMAIL, :REFIND, :ROLEID, :PASSWORD)";
    //    return sql;
    //}

    //public static string updateUserAccountPswEx()
    //{
    //    string sql = "UPDATE PROD_USERMGT SET PASSWORD = :PASSWORD WHERE (EMAIL = :EMAIL) AND (STATUS = :STATUS)";
    //    return sql;
    //}

    //public static string getLoginUserAccountEx()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE (PASSWORD = :PASSWORD) AND (USERNAME = :USERNAME) AND (STATUS = :STATUS)";
    //    return sql;
    //}

    //public static string getUserAccountByGuidPswEx()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE (PASSWORD = :PASSWORD) AND (STATUS = :STATUS)";
    //    return sql;
    //}

    //public static string updateUser()
    //{
    //    string sql = "UPDATE PROD_USERMGT SET ROLEID = :ROLEID WHERE USERID = :USERID";
    //    return sql;
    //}

    //public static string disableUserAccount()
    //{
    //    string sql = "UPDATE PROD_USERMGT SET STATUS = :STATUS WHERE USERID = :USERID";
    //    return sql;
    //}

    //public static string getUsers()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :sStatus";
    //    return sql;
    //}

    //public static string getUsersByRole()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :iStatus AND ROLEID = :iRoleId ORDER BY FULLNAME";
    //    return sql;
    //}

    //public static string getUserByEmailAddress()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :iStatus AND EMAIL = :EMAIL";
    //    return sql;
    //}

    //public static string getUsersByName()
    //{
    //    string sql = "SELECT USERID, USERNAME, STATUS, FULLNAME, EMAIL, REFIND, ROLEID, PASSWORD FROM PROD_USERMGT WHERE STATUS = :sStatus AND USERNAME = :sName";
    //    return sql;
    //}

    //#endregion

    //#region********************* Staff Details from Information Ware House *******************

    //public static string getUserByDomainLoginID()
    //{
    //    string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
    //    sql += " WHERE lower(substr(EMAIL,1,instr(EMAIL,'@')-1)) = lower(:sEmail)";

    //    return sql;
    //}

    //public static string CompleteStafDetailsByName()
    //{
    //    string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
    //    sql += " WHERE (upper(SURNAME) LIKE :SURNAME) OR (upper(FIRST_NAME) LIKE :SURNAME) AND USERNAME IS NOT NULL";

    //    return sql;
    //}

    //public static string getUserFromCompleteStaffDetailsByUserName()
    //{
    //    string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
    //    sql += " WHERE upper(USERNAME) = :USERNAME";
    //    return sql;
    //}

    //public static string CompleteStafDetailsByStaffNumber()
    //{
    //    string sql = "SELECT SURNAME, FIRST_NAME, FULL_NAME, REF_IND, JOB_POSITION, JOB_TITLE, USERNAME, EMAIL FROM " + AppConfiguration.informationWareHouse;
    //    sql += " WHERE upper(STAFF_NUMBER) = :STAFF_NUMBER";
    //    return sql;
    //}

    //#endregion

    #region********************* Queries to Create, Update and Get Initiatives *********************************

    public static string CreateInitiative()
    {
        string sql = "INSERT INTO MANHR_INITIATIVE (IDINITIATIVE, USERID, BUS_CASE, SCOPE, SUCCESS_FACTOR, OBJECTIVES, DELIVERABLES, TEAM_MEMBER, ";
        sql += "BENEFITS, INITMEASURES, DATE_SUBMITTED, TITLE, IDOU, FUNCTIONID, KEYACTIVITIES, PIXNAME) VALUES (:IDINITIATIVE, :USERID, :BUS_CASE, :SCOPE, ";
        sql += ":SUCCESS_FACTOR, :OBJECTIVES, :DELIVERABLES, :TEAM_MEMBER, :BENEFITS, :MEASURES, :DATE_SUBMITTED, :TITLE, :IDOU, :FUNCTIONID, :KEYACTIVITIES, :PIXNAME)";

        return sql;
    }
    public static string UpdateInitiative()
    {
        string sql = "UPDATE MANHR_INITIATIVE SET USERID = :USERID, BUS_CASE = :BUS_CASE, SCOPE = :SCOPE, SUCCESS_FACTOR = :SUCCESS_FACTOR, ";
        sql += "OBJECTIVES = :OBJECTIVES, DELIVERABLES = :DELIVERABLES, TEAM_MEMBER = :TEAM_MEMBER, BENEFITS = :BENEFITS, INITMEASURES = :MEASURES, ";
        sql += "TITLE = :TITLE, IDOU = :IDOU, FUNCTIONID = :FUNCTIONID, KEYACTIVITIES = :KEYACTIVITIES, PIXNAME = :PIXNAME WHERE IDINITIATIVE = :IDINITIATIVE";

        return sql;
    }
    public static string getInitiativeById()
    {
        string sql = "SELECT IDINITIATIVE, BUS_CASE, SCOPE, SUCCESS_FACTOR, OBJECTIVES, DELIVERABLES, TEAM_MEMBER, BENEFITS, INITMEASURES, USERID, ";
        sql += "DATE_SUBMITTED, TITLE, IDOU, FUNCTIONID, STATUS, KEYACTIVITIES, PIXNAME FROM MANHR_INITIATIVE WHERE IDINITIATIVE = :IDINITIATIVE";

        return sql;
    }
    private static string getInitiativesMaster()
    {
        string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        sql += "MANHR_INITIATIVE.IDFACILITIES, MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, ";
        sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE.PIXNAME ";
        sql += "FROM MANHR_INITIATIVE INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID ";
        return sql;
    }
    public static string getInitiatives()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.IDFACILITIES, MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, ";
        //sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID  ";

        string sql = getInitiativesMaster();
        sql += "ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string getInitiativeByUserId()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.IDFACILITIES, MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, ";
        //sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativesMaster();
        sql += "WHERE PROD_USERMGT.USERID = :USERID ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string GetMyApprovedNotApprovedInitiative()
    {
        string sql = getInitiativesMaster();
        sql += "WHERE (PROD_USERMGT.USERID = :USERID) AND (MANHR_INITIATIVE.STATUS = :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string GetMyPendingInitiative()
    {
        string sql = getInitiativesMaster();
        sql += "WHERE (PROD_USERMGT.USERID = :USERID) AND (MANHR_INITIATIVE.STATUS <> :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string getInitiativeByPrefix()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, ";
        //sql += "PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativesMaster();
        sql += "WHERE MANHR_INITIATIVE.TITLE LIKE :TITLE ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    private static string getInitiativeApprovalMaster()
    {
        string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        sql += "FROM MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        return sql;
    }
    public static string getInitiativePendingMyApproval()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        //sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        //sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativeApprovalMaster();
        sql += "WHERE (PROD_USERMGT.USERID = :USERID) AND (MANHR_INITIATIVE_APPROVAL.STAND <> :STAND) AND (MANHR_INITIATIVE.STATUS = :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string getApprovedInitiatives()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        //sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        //sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM  MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativeApprovalMaster();
        sql += "WHERE (MANHR_INITIATIVE_APPROVAL.STAND = :STAND) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }

    public static string getAllApprovedInitiatives()
    {
        string sql = getInitiativesMaster();
        sql += "WHERE (MANHR_INITIATIVE.STATUS = :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }

    public static string getAllPendingInitiatives()
    {
        string sql = getInitiativesMaster();
        sql += "WHERE (MANHR_INITIATIVE.STATUS <> :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }

    public static string getNotApprovedInitiatives()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        //sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        //sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM  MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativeApprovalMaster();
        sql += "WHERE (MANHR_INITIATIVE_APPROVAL.STAND <> :STAND) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }
    public static string getInitiativeIApproved()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        //sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        //sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativeApprovalMaster();
        sql += "WHERE (PROD_USERMGT.USERID = :USERID) AND (MANHR_INITIATIVE_APPROVAL.STAND = :STAND) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }

    public static string getInitiativeApprovedInMyFunction()
    {
        //string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDOU, ";
        //sql += "MANHR_INITIATIVE.FUNCTIONID, MANHR_INITIATIVE.STATUS, PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, ";
        //sql += "PROD_USERMGT.REFIND, PROD_USERMGT.ROLEID, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, ";
        //sql += "MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, MANHR_INITIATIVE_APPROVAL.COMMENTS, MANHR_INITIATIVE_APPROVAL.STAND, MANHR_INITIATIVE.PIXNAME ";
        //sql += "FROM MANHR_INITIATIVE INNER JOIN MANHR_INITIATIVE_APPROVAL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INITIATIVE_APPROVAL.IDINITIATIVE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";

        string sql = getInitiativeApprovalMaster();
        sql += "WHERE (PROD_USERMGT.USERID = :USERID) AND (MANHR_INITIATIVE.STATUS = :STATUS) ORDER BY MANHR_INITIATIVE.TITLE";
        return sql;
    }

    

    public static string updateInitiativeStatus()
    {
        string sql = "UPDATE MANHR_INITIATIVE SET STATUS = :STATUS WHERE IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    #endregion

    #region ************************** Initiative Approval ***************************************

    public static string getApprovalReportByActivityID()
    {
        string sql = "SELECT FULLNAME, REFIND, USERNAME, ID_APPROVAL, ACTIVITYID, COMMENTS, ROLEID, ID_ACTIVITYINFO, ";
        sql += "TO_CHAR(DATE_RECEIVED, 'DD-MON-YYYY') AS DATE_RECEIVED, TO_CHAR(DATE_REVIEWED, 'DD-MON-YYYY') AS DATE_REVIEWED ";
        sql += "FROM PROD_VIW_APPROVAL WHERE ID_ACTIVITYINFO = :ID_ACTIVITYINFO";

        return sql;
    }

    public static string getApprovalByInitiativeId()
    {
        string sql = "SELECT MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, MANHR_INITIATIVE_APPROVAL.IDINITIATIVE, MANHR_INITIATIVE_APPROVAL.USERID, ";
        sql += "TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, 'DD/MM/YYYY') AS DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.STAND, ";
        sql += "MANHR_INITIATIVE_APPROVAL.ROLEID, TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, 'DD/MM/YYYY') AS DATE_REVIEWED, ";
        sql += "MANHR_INITIATIVE_APPROVAL.COMMENTS, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.USERNAME ";
        sql += "FROM MANHR_INITIATIVE_APPROVAL INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";
        sql += "WHERE IDINITIATIVE = :IDINITIATIVE";

        return sql;
    }

    public static string getApprovalByRoleInitiativeId()
    {
        string sql = "SELECT MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, MANHR_INITIATIVE_APPROVAL.IDINITIATIVE, MANHR_INITIATIVE_APPROVAL.USERID, ";
        sql += "TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, 'DD/MM/YYYY') AS DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.STAND, ";
        sql += "MANHR_INITIATIVE_APPROVAL.ROLEID, TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, 'DD/MM/YYYY') AS DATE_REVIEWED, ";
        sql += "MANHR_INITIATIVE_APPROVAL.COMMENTS, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.USERNAME ";
        sql += "FROM MANHR_INITIATIVE_APPROVAL INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";
        sql += "WHERE IDINITIATIVE = :lInitiativeId AND PROD_USERMGT.ROLEID = :iRoleId";

        return sql;
    }

    public static string getApprovalByInitiativeIdUserId()
    {
        string sql = "SELECT MANHR_INITIATIVE_APPROVAL.ID_APPROVAL, MANHR_INITIATIVE_APPROVAL.IDINITIATIVE, MANHR_INITIATIVE_APPROVAL.USERID, ";
        sql += "TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_RECEIVED, 'DD/MM/YYYY') AS DATE_RECEIVED, MANHR_INITIATIVE_APPROVAL.STAND, ";
        sql += "MANHR_INITIATIVE_APPROVAL.ROLEID, TO_CHAR(MANHR_INITIATIVE_APPROVAL.DATE_REVIEWED, 'DD/MM/YYYY') AS DATE_REVIEWED, ";
        sql += "MANHR_INITIATIVE_APPROVAL.COMMENTS, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.USERNAME ";
        sql += "FROM MANHR_INITIATIVE_APPROVAL INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE_APPROVAL.USERID = PROD_USERMGT.USERID ";
        sql += "WHERE IDINITIATIVE = :IDINITIATIVE AND MANHR_INITIATIVE_APPROVAL.USERID = :USERID";

        return sql;
    }

    public static string getBIApprovalByApprovalId()
    {
        string sql = "SELECT ID_APPROVAL, IDINITIATIVE, USERID, TO_CHAR(DATE_RECEIVED, 'DD/MM/YYYY') AS DATE_RECEIVED, STAND, ROLEID, ";
        sql += "TO_CHAR(DATE_REVIEWED, 'DD/MM/YYYY') AS DATE_REVIEWED, COMMENTS FROM MANHR_INITIATIVE_APPROVAL WHERE ID_APPROVAL = :ID_APPROVAL";
        return sql;
    }

    public static string assignInitiativeToApprover()
    {
        string sql = "INSERT INTO MANHR_INITIATIVE_APPROVAL (IDINITIATIVE, USERID, DATE_RECEIVED, ROLEID) VALUES (:IDINITIATIVE, :USERID, :DATE_RECEIVED, :ROLEID)";
        return sql;
    }

    public static string UpdateAssignedInitiativeToApprover()
    {
        string sql = "UPDATE MANHR_INITIATIVE_APPROVAL SET USERID = :USERID WHERE (ROLEID = :ROLEID) AND (IDINITIATIVE = :IDINITIATIVE)";
        return sql;
    }

    public static string actionInitiativeRequest()
    {
        string sql = "UPDATE MANHR_INITIATIVE_APPROVAL SET DATE_REVIEWED = :DATE_REVIEWED, COMMENTS = :COMMENTS, STAND = :STAND WHERE (ID_APPROVAL = :ID_APPROVAL)";
        return sql;
    }

    public static string DeleteInitiativeApprovalByActivity()
    {
        string sql = "DELETE FROM MANHR_INITIATIVE_APPROVAL WHERE IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    

    #endregion
    
    #region********************* Master Resource Utilisation ***********************************

    public static string CreateMasterResourceUtilisation()
    {
        string sql = "INSERT INTO MANHR_MASTER_RESOURCEUTIL (IDINITIATIVE, INITIATIVE) VALUES (:IDINITIATIVE, :INITIATIVE)";
        return sql;
    }

    public static string UpdateMasterResourceUtilisation()
    {
        string sql = "UPDATE MANHR_MASTER_RESOURCEUTIL SET INITIATIVE = :INITIATIVE WHERE IDMASTER = :IDMASTER";
        return sql;
    }

    public static string getMasterResourceUtilisationByInitiativeId()
    {
        string sql = "SELECT MANHR_MASTER_RESOURCEUTIL.IDMASTER, MANHR_MASTER_RESOURCEUTIL.IDINITIATIVE, MANHR_MASTER_RESOURCEUTIL.INITIATIVE ";
        sql += "FROM MANHR_MASTER_RESOURCEUTIL WHERE MANHR_MASTER_RESOURCEUTIL.IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    #endregion

    #region********************* Resource Utilisation ***********************************

    public static string CreateResourceUtilisation()
    {
        string sql = "INSERT INTO MANHR_RESOURCEUTIL (IDINITIATIVE, IDDISCIPLINE, NOOFSTAFF, STAFFHRUTIL, MAXWRHR) ";
        sql += "VALUES (:IDINITIATIVE, :IDDISCIPLINE, :NOOFSTAFF, :STAFFHRUTIL, :MAXWRHR)";
        return sql;
    }

    public static string UpdateResourceUtilisation()
    {
        string sql = "UPDATE MANHR_RESOURCEUTIL SET IDDISCIPLINE = :IDDISCIPLINE, NOOFSTAFF = :NOOFSTAFF, STAFFHRUTIL = :STAFFHRUTIL, MAXWRHR = :MAXWRHR WHERE IDRESOURCE = :IDRESOURCE";
        return sql;
    }

    public static string getResourceUtilisationByInitiativeId()
    {
        string sql = "SELECT MANHR_RESOURCEUTIL.IDRESOURCE, MANHR_RESOURCEUTIL.IDINITIATIVE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, ";
        sql += "MANHR_RESOURCEUTIL.MAXWRHR, MANHR_DISCIPLINES.IDDISCIPLINE, MANHR_DISCIPLINES.DISCIPLINE, MANHR_DISCIPLINES.DESCRIPTION FROM MANHR_RESOURCEUTIL ";
        sql += "INNER JOIN MANHR_DISCIPLINES ON MANHR_RESOURCEUTIL.IDDISCIPLINE = MANHR_DISCIPLINES.IDDISCIPLINE ";
        sql += "WHERE MANHR_RESOURCEUTIL.IDINITIATIVE = :IDINITIATIVE";
        
        return sql;
    }

    public static string getResourceRequirementByInitiativeId()
    {
        string sql = "SELECT MANHR_RESOURCEUTIL.IDRESOURCE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, ";
        sql += "MANHR_RESOURCEUTIL.MAXWRHR, MANHR_DISCIPLINES.IDDISCIPLINE, MANHR_DISCIPLINES.DISCIPLINE, ";
        sql += "MANHR_DISCIPLINES.DESCRIPTION, MANHR_INITIATIVE.IDINITIATIVE ";
        sql += "FROM MANHR_RESOURCEUTIL, MANHR_DISCIPLINES, MANHR_INITIATIVE ";
        sql += "WHERE MANHR_RESOURCEUTIL.IDDISCIPLINE = MANHR_DISCIPLINES.IDDISCIPLINE ";
        sql += "AND MANHR_RESOURCEUTIL.IDINITIATIVE = MANHR_INITIATIVE.IDINITIATIVE ";
        sql += "AND MANHR_INITIATIVE.IDINITIATIVE = :IDINITIATIVE";

        return sql;
    }

    public static string getResourceRequirementByYear()
    {
        string sql = "SELECT MANHR_RESOURCEUTIL.IDRESOURCE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, ";
        sql += "MANHR_RESOURCEUTIL.MAXWRHR, MANHR_DISCIPLINES.IDDISCIPLINE, MANHR_DISCIPLINES.DISCIPLINE, ";
        sql += "MANHR_DISCIPLINES.DESCRIPTION, MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.TITLE ";
        sql += "FROM MANHR_INITIATIVE ";
        sql += "LEFT OUTER JOIN MANHR_RESOURCEUTIL ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_RESOURCEUTIL.IDINITIATIVE ";
        sql += "LEFT OUTER JOIN MANHR_DISCIPLINES ON MANHR_RESOURCEUTIL.IDDISCIPLINE = MANHR_DISCIPLINES.IDDISCIPLINE ";
        sql += "WHERE TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') = :iYear ";
        sql += "ORDER BY MANHR_INITIATIVE.TITLE ";

        return sql;
    }

    public static string getResourceUtilisationByResourceId()
    {
        string sql = "SELECT IDRESOURCE, IDINITIATIVE, IDDISCIPLINE, NOOFSTAFF, STAFFHRUTIL, MAXWRHR FROM MANHR_RESOURCEUTIL WHERE IDRESOURCE = :IDRESOURCE";
        return sql;
    }

    public static string DeleteInitiativeByMasterId()
    {
        string sql = "DELETE FROM MANHR_MASTER_RESOURCEUTIL WHERE IDMASTER = :IDMASTER";
        return sql;
    }

    public static string DeleteInitiativeDetail()
    {
        string sql = "DELETE FROM MANHR_RESOURCEUTIL WHERE IDRESOURCE = :IDRESOURCE";
        return sql;
    }

    public static string DeleteInitiativeDetailsByMasterId()
    {
        string sql = "DELETE FROM MANHR_RESOURCEUTIL WHERE IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string getDisciplines()
    {
        string sql = "SELECT IDDISCIPLINE, DISCIPLINE, DESCRIPTION FROM MANHR_DISCIPLINES";
        return sql;
    }

    public static string getDisciplineById()
    {
        string sql = "SELECT IDDISCIPLINE, DISCIPLINE, DESCRIPTION FROM MANHR_DISCIPLINES WHERE IDDISCIPLINE = :IDDISCIPLINE";
        return sql;
    }

   

    #endregion

    #region ******************* Reporting *******************************

    public static string Reporter()
    {
        string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, MANHR_INITIATIVE.OBJECTIVES, ";
        sql += "MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.KEYACTIVITIES, MANHR_INITIATIVE.DATE_SUBMITTED, ";
        sql += "PROD_USERMGT.USERID, PROD_USERMGT.USERNAME, PROD_USERMGT.FULLNAME, PROD_USERMGT.EMAIL, PROD_USERMGT.REFIND, MANHR_RESOURCEUTIL.IDRESOURCE, ";
        sql += "MANHR_RESOURCEUTIL.INITIATIVE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, MANHR_RESOURCEUTIL.MAXWRHR, MANHR_DISCIPLINES.IDDISCIPLINE, ";
        sql += "MANHR_DISCIPLINES.DISCIPLINE, MANHR_DISCIPLINES.DESCRIPTION FROM MANHR_DISCIPLINES, MANHR_RESOURCEUTIL, MANHR_INITIATIVE, PROD_USERMGT ";
        sql += "WHERE (MANHR_DISCIPLINES.IDDISCIPLINE = MANHR_RESOURCEUTIL.IDDISCIPLINE) AND (MANHR_RESOURCEUTIL.IDINITIATIVE = MANHR_INITIATIVE.IDINITIATIVE) ";
        sql += "AND (MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID) AND (MANHR_INITIATIVE.IDINITIATIVE = :IDINITIATIVE)";

        return sql;
    }

    public static string xReport()
    {
        string sql = "SELECT MANHR_INITIATIVE.IDINITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, COMMON_OU.IDOU, COMMON_OU.OU, ";
        sql += "CPDMS_FUNCTIONS.FUNCTIONID, CPDMS_FUNCTIONS.FUNCTION, MANHR_INITIATIVE.STATUS, MANHR_INITIATIVE.KEYACTIVITIES, ";
        sql += "MANHR_INITIATIVE.PIXNAME, INITIATOR.FULLNAME, INITIATOR.EMAIL, INITIATOR.USERID ";
        sql += "FROM MANHR_INITIATIVE INNER JOIN CPDMS_FUNCTIONS ON CPDMS_FUNCTIONS.FUNCTIONID = MANHR_INITIATIVE.FUNCTIONID ";
        sql += "INNER JOIN COMMON_OU ON COMMON_OU.IDOU = MANHR_INITIATIVE.IDOU ";
        sql += "INNER JOIN PROD_USERMGT INITIATOR ON INITIATOR.USERID = MANHR_INITIATIVE.USERID ";
        sql += "WHERE (MANHR_INITIATIVE.IDINITIATIVE = :lInitiativeId)";

        return sql;

        //string sql = "SELECT PROD_USERMGT.FULLNAME, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, MANHR_INITIATIVE.SUCCESS_FACTOR, ";
        //sql += "MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, MANHR_INITIATIVE.BENEFITS, ";
        //sql += "MANHR_INITIATIVE.INITMEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.STATUS, ";
        //sql += "MANHR_DISCIPLINES.DISCIPLINE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, MANHR_RESOURCEUTIL.MAXWRHR, ";
        //sql += "COMMON_OU.OU, CPDMS_FUNCTION.FUNCTION, PROD_DISTRICT.DISTRICT, PROD_FACILITIES.FACILITIES, MANHR_INITIATIVE.KEYACTIVITIES ";
        //sql += "FROM PROD_USERMGT ";
        //sql += "INNER JOIN MANHR_INITIATIVE ON PROD_USERMGT.USERID = MANHR_INITIATIVE.USERID ";
        //sql += "INNER JOIN CPDMS_FUNCTION ON MANHR_INITIATIVE.FUNCTIONID = CPDMS_FUNCTION.FUNCTIONID ";
        //sql += "INNER JOIN COMMON_OU ON MANHR_INITIATIVE.IDOU = COMMON_OU.IDOU ";
        //sql += "INNER JOIN PROD_FACILITIES ON MANHR_INITIATIVE.IDFACILITIES = PROD_FACILITIES.ID_FACILITIES ";
        //sql += "INNER JOIN PROD_DISTRICT ON PROD_FACILITIES.ID_DISTRICT = PROD_DISTRICT.ID_DISTRICT ";
        //sql += "INNER JOIN MANHR_DISCIPLINES ";
        //sql += "INNER JOIN MANHR_RESOURCEUTIL ON MANHR_DISCIPLINES.IDDISCIPLINE = MANHR_RESOURCEUTIL.IDDISCIPLINE ON  ";
        //sql += "MANHR_INITIATIVE.IDINITIATIVE = MANHR_RESOURCEUTIL.IDINITIATIVE ";
        //sql += "WHERE (MANHR_INITIATIVE.IDINITIATIVE = :lInitiativeId)";

        //string sql = "SELECT PROD_USERMGT.FULLNAME, MANHR_MASTER_RESOURCEUTIL.INITIATIVE, MANHR_INITIATIVE.BUS_CASE, MANHR_INITIATIVE.SCOPE, ";
        //sql += "MANHR_INITIATIVE.SUCCESS_FACTOR, MANHR_INITIATIVE.OBJECTIVES, MANHR_INITIATIVE.DELIVERABLES, MANHR_INITIATIVE.TEAM_MEMBER, ";
        //sql += "MANHR_INITIATIVE.BENEFITS, MANHR_INITIATIVE.MEASURES, MANHR_INITIATIVE.DATE_SUBMITTED, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.STATUS, ";
        //sql += "MANHR_DISCIPLINES.DISCIPLINE, MANHR_RESOURCEUTIL.NOOFSTAFF, MANHR_RESOURCEUTIL.STAFFHRUTIL, MANHR_RESOURCEUTIL.MAXWRHR, ";
        //sql += "COMMON_OU.OU, CPDMS_FUNCTION.FUNCTION, PROD_DISTRICT.DISTRICT, PROD_FACILITIES.FACILITIES ";
        //sql += "FROM MANHR_MASTER_RESOURCEUTIL ";
        //sql += "RIGHT OUTER JOIN MANHR_INITIATIVE ON MANHR_MASTER_RESOURCEUTIL.IDINITIATIVE = MANHR_INITIATIVE.IDINITIATIVE ";
        //sql += "LEFT OUTER JOIN MANHR_RESOURCEUTIL ON MANHR_MASTER_RESOURCEUTIL.IDMASTER = MANHR_RESOURCEUTIL.IDMASTER ";
        //sql += "LEFT OUTER JOIN MANHR_DISCIPLINES ON MANHR_RESOURCEUTIL.IDDISCIPLINE = MANHR_DISCIPLINES.IDDISCIPLINE ";
        //sql += "INNER JOIN PROD_USERMGT ON MANHR_INITIATIVE.USERID = PROD_USERMGT.USERID ";
        //sql += "INNER JOIN CPDMS_FUNCTION ON MANHR_INITIATIVE.FUNCTIONID = CPDMS_FUNCTION.FUNCTIONID ";
        //sql += "INNER JOIN COMMON_OU ON MANHR_INITIATIVE.IDOU = COMMON_OU.IDOU ";
        //sql += "INNER JOIN PROD_FACILITIES ON MANHR_INITIATIVE.IDFACILITIES = PROD_FACILITIES.ID_FACILITIES ";
        //sql += "INNER JOIN PROD_DISTRICT ON PROD_FACILITIES.ID_DISTRICT = PROD_DISTRICT.ID_DISTRICT ";
        //sql += "WHERE (MANHR_INITIATIVE.IDINITIATIVE = :IDINITIATIVE)";

    }

    public static string ImpactOnAssetViewTwo()
    {
        string sql = "SELECT MANHR_INITIATIVE.TITLE, TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') YYEAR, ";
        sql += "PROD_FACILITIES.FACILITIES, PROD_DISTRICT.DISTRICT, COMMON_OU.OU ";
        sql += "FROM MANHR_INITIATIVE ";
        sql += "LEFT OUTER JOIN MANHR_INIT_DIST_FACILITIES ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INIT_DIST_FACILITIES.IDINITIATIVE ";
        sql += "INNER JOIN PROD_FACILITIES ON PROD_FACILITIES.ID_FACILITIES = MANHR_INIT_DIST_FACILITIES.ID_FACILITIES ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = PROD_FACILITIES.ID_DISTRICT ";
        sql += "INNER JOIN COMMON_OU ON COMMON_OU.IDOU = MANHR_INITIATIVE.IDOU ";
        sql += "WHERE TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') = :YYEARONE ";
        sql += "AND TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY')  = :YYEARTHREE";
        
        return sql;
    }

    public static string ImpactOnAssetViewThree()
    {
        string sql = "SELECT MANHR_INITIATIVE.TITLE, TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') YYEAR, ";
        sql += "PROD_FACILITIES.FACILITIES, PROD_DISTRICT.DISTRICT, COMMON_OU.OU ";
        sql += "FROM MANHR_INITIATIVE ";
        sql += "LEFT OUTER JOIN MANHR_INIT_DIST_FACILITIES ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INIT_DIST_FACILITIES.IDINITIATIVE ";
        sql += "INNER JOIN PROD_FACILITIES ON PROD_FACILITIES.ID_FACILITIES = MANHR_INIT_DIST_FACILITIES.ID_FACILITIES ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = PROD_FACILITIES.ID_DISTRICT ";
        sql += "INNER JOIN COMMON_OU ON COMMON_OU.IDOU = MANHR_INITIATIVE.IDOU ";
        sql += "WHERE TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') = :YYEARONE ";
        sql += "AND TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY')  = :YYEARTHREE";

        return sql;
    }

    public static string InitiativeStaffTimeUtilisation()
    {
        string sql = "SELECT MANHR_INITIATIVE.TITLE, TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') YYEAR, ";
        sql += "PROD_FACILITIES.FACILITIES, PROD_DISTRICT.DISTRICT, COMMON_OU.OU ";
        sql += "FROM MANHR_INITIATIVE ";
        sql += "LEFT OUTER JOIN MANHR_INIT_DIST_FACILITIES ON MANHR_INITIATIVE.IDINITIATIVE = MANHR_INIT_DIST_FACILITIES.IDINITIATIVE ";
        sql += "INNER JOIN PROD_FACILITIES ON PROD_FACILITIES.ID_FACILITIES = MANHR_INIT_DIST_FACILITIES.ID_FACILITIES ";
        sql += "INNER JOIN PROD_DISTRICT ON PROD_DISTRICT.ID_DISTRICT = PROD_FACILITIES.ID_DISTRICT ";
        sql += "INNER JOIN COMMON_OU ON COMMON_OU.IDOU = MANHR_INITIATIVE.IDOU ";
        sql += "WHERE TO_CHAR(TO_DATE(MANHR_INITIATIVE.DATE_SUBMITTED, 'DD-MON-YY'), 'YYYY') = :iYear ";
        
        return sql;
    }

    #endregion

    #region ******************* OU *******************

    public static string getOUs()
    {
        string sql = "SELECT IDOU, OU FROM COMMON_OU";
        return sql;
    }

    public static string getOUById()
    {
        string sql = "SELECT IDOU, OU FROM COMMON_OU WHERE IDOU = :IDOU";
        return sql;
    }

    public static string getOuByInitiative()
    {
        string sql = "SELECT IDOUINIT, IDOU, IDINITIATIVE FROM MANHR_INITIATIVE_OU WHERE IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string getDistrictFacilitiesByInitiative()
    {
        string sql = "SELECT ID, IDINITIATIVE, ID_FACILITIES FROM MANHR_INIT_DIST_FACILITIES WHERE IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string AssignFacilitiesToInitiative()
    {
        string sql = "INSERT INTO MANHR_INIT_DIST_FACILITIES (IDINITIATIVE, ID_FACILITIES) VALUES (:IDINITIATIVE, :ID_FACILITIES)";
        return sql;
    }

    public static string AssignDistrictToInitiative()
    {
        string sql = "INSERT INTO MANHR_INIT_DIST_FACILITIES (IDINITIATIVE, ID_DISTRICT) VALUES (:IDINITIATIVE, :ID_DISTRICT)";
        return sql;
    }

    public static string AssignAssetToInitiative()
    {
        string sql = "INSERT INTO MANHR_INIT_DIST_FACILITIES (IDINITIATIVE, IDASSET) VALUES (:IDINITIATIVE, :IDASSET)";
        return sql;
    }

    public static string AssignOUToInitiative()
    {
        string sql = "INSERT INTO MANHR_INIT_DIST_FACILITIES (IDINITIATIVE, IDOU) VALUES (:IDINITIATIVE, :IDOU)";
        return sql;
    }

    public static string UpdateFacilitiesToInitiative()
    {
        string sql = "UPDATE MANHR_INIT_DIST_FACILITIES SET ID_FACILITIES = :ID_FACILITIES WHERE  IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string UpdateDistrictToInitiative()
    {
        string sql = "UPDATE MANHR_INIT_DIST_FACILITIES SET ID_DISTRICT = :ID_DISTRICT WHERE  IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string UpdateAssetToInitiative()
    {
        string sql = "UPDATE MANHR_INIT_DIST_FACILITIES SET IDASSET = :IDASSET WHERE  IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string UpdateOUToInitiative()
    {
        string sql = "UPDATE MANHR_INIT_DIST_FACILITIES SET IDOU = :IDOU WHERE  IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }


    public static string findFacilitiesToInitiative()
    {
        string sql = "SELECT * FROM MANHR_INIT_DIST_FACILITIES SET WHERE ID_FACILITIES = :ID_FACILITIES AND IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string findDistrictToInitiative()
    {
        string sql = "SELECT * FROM MANHR_INIT_DIST_FACILITIES SET WHERE ID_DISTRICT = :ID_DISTRICT AND IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string findAssetToInitiative()
    {
        string sql = "SELECT * FROM MANHR_INIT_DIST_FACILITIES SET WHERE IDASSET = :IDASSET AND IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    public static string findOUToInitiative()
    {
        string sql = "SELECT * FROM MANHR_INIT_DIST_FACILITIES SET WHERE IDOU = :IDOU AND IDINITIATIVE = :IDINITIATIVE";
        return sql;
    }

    #endregion

    #region ******************* Functions *******************

    public static string getFunctions()
    {
        string sql = "SELECT FUNCTIONID, FUNCTION FROM CPDMS_FUNCTIONS ORDER BY FUNCTION";
        return sql;
    }

    public static string getFunctionById()
    {
        string sql = "SELECT FUNCTIONID, FUNCTION FROM CPDMS_FUNCTIONS WHERE FUNCTIONID = :FUNCTIONID";
        return sql;
    }

    #endregion

    #region Base Data

    public static string getBaseData()
    {
        string sql = "SELECT MANHR_BASEDATA.IDBASE, ";
        sql += "MANHR_BASEDATA.NOOFPERSONNEL, ";
        sql += "MANHR_BASEDATA.BASELOADMNT, ";
        sql += "MANHR_DISCIPLINES.IDDISCIPLINE, ";
        sql += "MANHR_DISCIPLINES.DISCIPLINE, ";
        sql += "MANHR_DISCIPLINES.DESCRIPTION ";
        sql += "FROM MANHR_BASEDATA ";
        sql += "RIGHT OUTER JOIN MANHR_DISCIPLINES ON MANHR_DISCIPLINES.IDDISCIPLINE = MANHR_BASEDATA.IDDISCIPLINE";

        return sql;
    }

    public static string InsertBaseData()
    {
        string sql = "INSERT INTO MANHR_BASEDATA (IDDISCIPLINE, NOOFPERSONNEL, BASELOADMNT) VALUES (:IDDISCIPLINE, :NOOFPERSONNEL, :BASELOADMNT)";
        return sql;
    }

    public static string UpdateBaseData()
    {
        string sql = "UPDATE MANHR_BASEDATA SET IDDISCIPLINE = :IDDISCIPLINE, NOOFPERSONNEL = :NOOFPERSONNEL, BASELOADMNT = :BASELOADMNT WHERE IDBASE = :IDBASE";
        return sql;
    }

    #endregion


    #region ********************* Project Current Status/Milestones **********************************

    public static string InsertProjectCurrentStatus()
    {
        string sql = "INSERT INTO MANHR_PROJSTATUS (IDINITIATIVE, STATUS, LEC, CHALLENGES, COMMENTS) VALUES (:lInitiativeId, :sStatus, :sLEC, :sChallenges, :sComments)";
        return sql;
    }

    public static string UpdateProjectCurrentStatus()
    {
        string sql = "UPDATE MANHR_PROJSTATUS SET STATUS = :sStatus, LEC = :sLEC, CHALLENGES = :sChallenges, COMMENTS = :sComments WHERE IDSTATUS = :lStatusId";
        return sql;
    }

    public static string getProjectCurrentStatusByInitiativeId()
    {
        string sql = "SELECT IDSTATUS, IDINITIATIVE, STATUS, LEC, CHALLENGES, COMMENTS FROM MANHR_PROJSTATUS WHERE IDINITIATIVE = :lInitiativeId";
        return sql;
    }


    public static string getProjectCurrentStatusReportByInitiativeId()
    {
        string sql = "SELECT MANHR_PROJSTATUS.IDSTATUS, MANHR_PROJSTATUS.STATUS, MANHR_PROJSTATUS.LEC, MANHR_PROJSTATUS.CHALLENGES, ";
        sql += "MANHR_PROJSTATUS.COMMENTS, MANHR_INITIATIVE.TITLE, MANHR_INITIATIVE.IDINITIATIVE ";
        sql += "FROM MANHR_PROJSTATUS, MANHR_INITIATIVE ";
        sql += "WHERE MANHR_PROJSTATUS.IDINITIATIVE = MANHR_INITIATIVE.IDINITIATIVE AND MANHR_INITIATIVE.IDINITIATIVE = :lInitiativeId";

        return sql;
    }

    public static string InsertProjectMilestone()
    {
        string sql = "INSERT INTO MANHR_PROJMILESTONES (IDINITIATIVE, MILESTONES, STATUS, TARGET_DATE, REMARKS) VALUES (:lInitiativeId, :sMilestones, :sStatus, :sTargetDate, :sRemarks)";
        return sql;
    }

    public static string UpdateProjectMilestone()
    {
        string sql = "UPDATE MANHR_PROJMILESTONES SET MILESTONES = :sMilestones, STATUS = :sStatus, TARGET_DATE = :sTargetDate, REMARKS = :sRemarks WHERE IDMILESTONE = :lMilestoneId";
        return sql;
    }

    public static string DeleteProjectMilestone()
    {
        string sql = "DELETE FROM MANHR_PROJMILESTONES WHERE IDMILESTONE = :lMilestoneId";
        return sql;
    }

    public static string getProjectMilestoneByInitiativeId()
    {
        string sql = "SELECT IDMILESTONE, IDINITIATIVE, MILESTONES, STATUS, TARGET_DATE, REMARKS FROM MANHR_PROJMILESTONES WHERE IDINITIATIVE = :lInitiativeId";
        return sql;
    }

    #endregion


}