using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Security;

public partial class Login : aspnetPage
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            msgPanel.Visible = false;
            ajaxWebExtension.showJscriptAlert(Page, this, "Your profile does not exist on Staff Information Database. Please register your profile and keep your password safe.");
        }
    }
    protected void btnLogin_Click(object sender, EventArgs e)
    {
        Encryption encryptPassword = new Encryption();
        string retrievedEncryptedPaswd = encryptPassword.encryptPassword(txtPassword.Text.ToUpper().Trim());
        bool bFound = appUsersHelper.LoginToUserAccountEx(txtUserName.Text.ToUpper().Trim(), retrievedEncryptedPaswd);

        appUsers eAppUserInfo = appUsersHelper.objGetUserByUserIdEx(txtUserName.Text, retrievedEncryptedPaswd);
        if (bFound)
        {
            FormsAuthentication.RedirectFromLoginPage(eAppUserInfo.m_sUserName, true);
            httpSessionx oInitSessn = new httpSessionx(HttpContext.Current.Session, eAppUserInfo);
        }
        else
        {
            Session["PasswordTrial"] = int.Parse(Session["PasswordTrial"].ToString()) + 1;

            if (int.Parse(Session["PasswordTrial"].ToString()) > 3)
            {
                msgPanel.Visible = true;
                mssgImg.ImageUrl = "~/Images/smallFail.gif";
                mssgLabel.Text = "No of Password trial exceeded.";

                btnLogin.Enabled = false;
            }
            else
            {
                msgPanel.Visible = true;
                mssgImg.ImageUrl = "~/Images/smallFail.gif";
                mssgLabel.Text = "Invalid Username or Password. Try login again.";
            }
        }
    }

    //private string useFormAuth()
    //{
    //    string sRet = "Err";
    //    try
    //    {
    //        loginUser oLogin = new loginUser();
    //        loginUser.loginRet me = oLogin.verifyAppUser();

    //        switch (me.eStatus)
    //        {
    //            case loginUser.statusx.loginSucceed:
    //                sRet = "";
    //                FormsAuthentication.RedirectFromLoginPage(me.eAppUserInfo.m_sUserName, true);

    //                break;
    //            case loginUser.statusx.idIsNotFound:
    //                sRet = "eId";
    //                break;
    //            case loginUser.statusx.loginFailed:
    //                sRet = "Err";
    //                break;
    //            case loginUser.statusx.statusDisabld:
    //                sRet = "nId";
    //                break;
    //            case loginUser.statusx.statusUnKnown:
    //                sRet = "nId";
    //                break;
    //            case loginUser.statusx.statusLocked:
    //                sRet = "lId";
    //                break;
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        System.Diagnostics.Debug.Fail(ex.TargetSite.Name + "\n \n" + ex.StackTrace + "\n \n" + ex.Message.ToString());
    //    }
    //    return sRet;
    //}
}